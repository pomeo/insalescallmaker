{"version":3,"sources":["components/autocomplete.js"],"names":["addon","component","window","UIkit","define","amd","UI","active","defaults","minLength","param","method","delay","loadingClass","flipDropdown","skipClass","hoverClass","source","renderer","template","visible","value","selected","boot","$html","on","ele","$","this","data","autocomplete","Utils","options","attr","e","target","input","hide","init","$this","select","trigger","debounce","handle","dropdown","find","html","length","appendTo","element","addClass","keydown","which","shiftKey","preventDefault","pick","keyup","triggercomplete","old","val","request","item","scrollinview","items","children","hasClass","index","eq","removeClass","top","position","scrollTop","dpheight","height","show","release","render","apply","forEach","toLowerCase","indexOf","push","params","ajax","url","type","dataType","done","json","empty","append"],"mappings":"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","file":"components/autocomplete.js","sourcesContent":["/*! UIkit 2.17.0 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */\n(function(addon) {\n\n    var component;\n\n    if (window.UIkit) {\n        component = addon(UIkit);\n    }\n\n    if (typeof define == \"function\" && define.amd) {\n        define(\"uikit-autocomplete\", [\"uikit\"], function(){\n            return component || addon(UIkit);\n        });\n    }\n\n})(function(UI){\n\n    \"use strict\";\n\n    var active;\n\n    UI.component('autocomplete', {\n\n        defaults: {\n            minLength: 3,\n            param: 'search',\n            method: 'post',\n            delay: 300,\n            loadingClass: 'uk-loading',\n            flipDropdown: false,\n            skipClass: 'uk-skip',\n            hoverClass: 'uk-active',\n            source: null,\n            renderer: null,\n\n            // template\n\n            template: '<ul class=\"uk-nav uk-nav-autocomplete uk-autocomplete-results\">{{~items}}<li data-value=\"{{$item.value}}\"><a>{{$item.value}}</a></li>{{/items}}</ul>'\n        },\n\n        visible  : false,\n        value    : null,\n        selected : null,\n\n        boot: function() {\n\n            // init code\n            UI.$html.on(\"focus.autocomplete.uikit\", \"[data-uk-autocomplete]\", function(e) {\n\n                var ele = UI.$(this);\n\n                if (!ele.data(\"autocomplete\")) {\n                    var obj = UI.autocomplete(ele, UI.Utils.options(ele.attr(\"data-uk-autocomplete\")));\n                }\n            });\n\n            // register outer click for autocompletes\n            UI.$html.on(\"click.autocomplete.uikit\", function(e) {\n                if (active && e.target!=active.input[0]) active.hide();\n            });\n        },\n\n        init: function() {\n\n            var $this   = this,\n                select  = false,\n                trigger = UI.Utils.debounce(function(e) {\n                    if(select) {\n                        return (select = false);\n                    }\n                    $this.handle();\n                }, this.options.delay);\n\n\n            this.dropdown = this.find('.uk-dropdown');\n            this.template = this.find('script[type=\"text/autocomplete\"]').html();\n            this.template = UI.Utils.template(this.template || this.options.template);\n            this.input    = this.find(\"input:first\").attr(\"autocomplete\", \"off\");\n\n            if (!this.dropdown.length) {\n               this.dropdown = UI.$('<div class=\"uk-dropdown\"></div>').appendTo(this.element);\n            }\n\n            if (this.options.flipDropdown) {\n                this.dropdown.addClass('uk-dropdown-flip');\n            }\n\n            this.input.on({\n                \"keydown\": function(e) {\n\n                    if (e && e.which && !e.shiftKey) {\n\n                        switch (e.which) {\n                            case 13: // enter\n                                select = true;\n\n                                if ($this.selected) {\n                                    e.preventDefault();\n                                    $this.select();\n                                }\n                                break;\n                            case 38: // up\n                                e.preventDefault();\n                                $this.pick('prev', true);\n                                break;\n                            case 40: // down\n                                e.preventDefault();\n                                $this.pick('next', true);\n                                break;\n                            case 27:\n                            case 9: // esc, tab\n                                $this.hide();\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n\n                },\n                \"keyup\": trigger\n            });\n\n            this.dropdown.on(\"click\", \".uk-autocomplete-results > *\", function(){\n                $this.select();\n            });\n\n            this.dropdown.on(\"mouseover\", \".uk-autocomplete-results > *\", function(){\n                $this.pick(UI.$(this));\n            });\n\n            this.triggercomplete = trigger;\n        },\n\n        handle: function() {\n\n            var $this = this, old = this.value;\n\n            this.value = this.input.val();\n\n            if (this.value.length < this.options.minLength) return this.hide();\n\n            if (this.value != old) {\n                $this.request();\n            }\n\n            return this;\n        },\n\n        pick: function(item, scrollinview) {\n\n            var $this    = this,\n                items    = UI.$(this.dropdown.find('.uk-autocomplete-results').children(':not(.'+this.options.skipClass+')')),\n                selected = false;\n\n            if (typeof item !== \"string\" && !item.hasClass(this.options.skipClass)) {\n                selected = item;\n            } else if (item == 'next' || item == 'prev') {\n\n                if (this.selected) {\n                    var index = items.index(this.selected);\n\n                    if (item == 'next') {\n                        selected = items.eq(index + 1 < items.length ? index + 1 : 0);\n                    } else {\n                        selected = items.eq(index - 1 < 0 ? items.length - 1 : index - 1);\n                    }\n\n                } else {\n                    selected = items[(item == 'next') ? 'first' : 'last']();\n                }\n\n                selected = UI.$(selected);\n            }\n\n            if (selected && selected.length) {\n                this.selected = selected;\n                items.removeClass(this.options.hoverClass);\n                this.selected.addClass(this.options.hoverClass);\n\n                // jump to selected if not in view\n                if (scrollinview) {\n\n                    var top       = selected.position().top,\n                        scrollTop = $this.dropdown.scrollTop(),\n                        dpheight  = $this.dropdown.height();\n\n                    if (top > dpheight ||  top < 0) {\n                        $this.dropdown.scrollTop(scrollTop + top);\n                    }\n                }\n            }\n        },\n\n        select: function() {\n\n            if(!this.selected) return;\n\n            var data = this.selected.data();\n\n            this.trigger(\"select.uk.autocomplete\", [data, this]);\n\n            if (data.value) {\n                this.input.val(data.value).trigger('change');\n            }\n\n            this.hide();\n        },\n\n        show: function() {\n            if (this.visible) return;\n            this.visible = true;\n            this.element.addClass(\"uk-open\");\n\n            active = this;\n            return this;\n        },\n\n        hide: function() {\n            if (!this.visible) return;\n            this.visible = false;\n            this.element.removeClass(\"uk-open\");\n\n            if (active === this) {\n                active = false;\n            }\n\n            return this;\n        },\n\n        request: function() {\n\n            var $this   = this,\n                release = function(data) {\n\n                    if(data) {\n                        $this.render(data);\n                    }\n\n                    $this.element.removeClass($this.options.loadingClass);\n                };\n\n            this.element.addClass(this.options.loadingClass);\n\n            if (this.options.source) {\n\n                var source = this.options.source;\n\n                switch(typeof(this.options.source)) {\n                    case 'function':\n\n                        this.options.source.apply(this, [release]);\n\n                        break;\n\n                    case 'object':\n\n                        if(source.length) {\n\n                            var items = [];\n\n                            source.forEach(function(item){\n                                if(item.value && item.value.toLowerCase().indexOf($this.value.toLowerCase())!=-1) {\n                                    items.push(item);\n                                }\n                            });\n\n                            release(items);\n                        }\n\n                        break;\n\n                    case 'string':\n\n                        var params ={};\n\n                        params[this.options.param] = this.value;\n\n                        UI.$.ajax({\n                            url: this.options.source,\n                            data: params,\n                            type: this.options.method,\n                            dataType: 'json'\n                        }).done(function(json) {\n                            release(json || []);\n                        });\n\n                        break;\n\n                    default:\n                        release(null);\n                }\n\n            } else {\n                this.element.removeClass($this.options.loadingClass);\n            }\n        },\n\n        render: function(data) {\n\n            var $this = this;\n\n            this.dropdown.empty();\n\n            this.selected = false;\n\n            if (this.options.renderer) {\n\n                this.options.renderer.apply(this, [data]);\n\n            } else if(data && data.length) {\n\n                this.dropdown.append(this.template({\"items\":data}));\n                this.show();\n\n                this.trigger('show.uk.autocomplete');\n            }\n\n            return this;\n        }\n    });\n\n    return UI.autocomplete;\n});\n"],"sourceRoot":"/source/"}