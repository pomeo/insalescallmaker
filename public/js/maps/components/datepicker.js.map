{"version":3,"sources":["components/datepicker.js"],"names":["addon","component","window","UIkit","define","amd","UI","dropdown","moment","active","defaults","mobile","weekstart","i18n","months","weekdays","format","offsettop","maxDate","minDate","template","data","opts","i","content","isNaN","add","formSelect","years","minYear","maxYear","currentyear","Date","getFullYear","options","length","month","push","join","year","days","d","day","cls","inmonth","selected","boot","$win","on","hide","$html","e","ele","$","this","preventDefault","datepicker","Utils","attr","trigger","target","parents","init","support","touch","element","$this","current","val","pick","value","isValid","stopPropagation","hasClass","is","select","Number","appendTo","initdate","offset","css","top","outerHeight","left","right","update","langdirection","innerWidth","outerWidth","show","unit","setMonth","setYear","getRows","tpl","html","now","before","getDay","row","arr","cells","after","isDisabled","isSelected","isToday","isInMonth","r","mindate","maxdate","today","disabled","undefined","dfl","a","b","c","arguments","Error","hasOwnProp","hasOwnProperty","call","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","printMsg","msg","suppressDeprecationWarnings","console","warn","deprecate","fn","firstTime","extend","apply","deprecateSimple","name","deprecations","padToken","func","count","leftZeroFill","ordinalizeToken","period","localeData","ordinal","Locale","Moment","config","skipOverflow","checkOverflow","copyConfig","_d","Duration","duration","normalizedInput","normalizeObjectUnits","quarters","quarter","weeks","week","hours","hour","minutes","minute","seconds","second","milliseconds","millisecond","_milliseconds","_days","_months","_data","_locale","_bubble","toString","valueOf","to","from","prop","_isAMomentObject","_i","_f","_l","_strict","_tzm","_isUTC","_offset","_pf","momentProperties","absRound","number","Math","ceil","floor","targetLength","forceSign","output","abs","sign","positiveMomentsDifference","base","other","res","clone","isAfter","momentsDifference","makeAs","isBefore","createAdder","direction","dur","tmp","addOrSubtractDurationFromMoment","mom","isAdding","updateOffset","setTime","rawSetter","rawGetter","rawMonthSetter","isArray","input","Object","prototype","isDate","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","diffs","toInt","normalizeUnits","units","lowered","toLowerCase","replace","unitAliases","camelFunctions","inputObject","normalizedProp","makeList","field","setter","indexOf","index","getter","method","results","m","utc","set","argumentForCoercion","coercedNumber","isFinite","daysInMonth","UTC","getUTCDate","weeksInYear","dow","doy","weekOfYear","daysInYear","isLeapYear","_a","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_isValid","getTime","normalizeLocale","key","chooseLocale","names","j","next","locale","split","loadLocale","slice","oldLocale","locales","hasModule","require","model","zone","local","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatTokenFunctions","Function","formatMoment","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","longDateFormat","localFormattingTokens","lastIndex","test","getParseRegexForToken","token","strict","parseTokenOneDigit","parseTokenThreeDigits","parseTokenFourDigits","parseTokenOneToFourDigits","parseTokenSignedNumber","parseTokenSixDigits","parseTokenOneToSixDigits","parseTokenTwoDigits","parseTokenOneToThreeDigits","parseTokenWord","_meridiemParse","parseTokenTimestampMs","parseTokenTimezone","parseTokenT","parseTokenDigits","parseTokenOneOrTwoDigits","parseTokenOrdinal","RegExp","regexpEscape","unescapeFormat","timezoneMinutesFromString","string","possibleTzMatches","tzChunk","parts","parseTimezoneChunker","addTimeToArrayFromToken","datePartArray","monthsParse","parseInt","_dayOfYear","parseTwoDigitYear","_isPm","isPM","parseFloat","_useUTC","weekdaysParse","_w","invalidWeekday","substr","dayOfYearFromWeekInfo","w","weekYear","weekday","temp","GG","W","E","_week","gg","dayOfYearFromWeeks","dayOfYear","dateFromConfig","date","currentDate","yearToUse","currentDateArray","makeUTCDate","getUTCMonth","makeDate","setUTCMinutes","getUTCMinutes","dateFromObject","getUTCFullYear","getMonth","getDate","makeDateFromStringAndFormat","ISO_8601","parseISO","parsedInput","tokens","skipped","stringLength","totalParsedInputLength","s","matched","p1","p2","p3","p4","makeDateFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","NaN","score","l","isoRegex","exec","isoDates","isoTimes","makeDateFromString","createFromInputFallback","map","makeDateFromInput","aspNetJsonRegex","obj","y","h","M","ms","setFullYear","setUTCFullYear","parseWeekday","substituteTimeAgo","withoutSuffix","isFuture","relativeTime","posNegDuration","round","as","args","relativeTimeThresholds","firstDayOfWeek","firstDayOfWeekOfYear","adjustedMoment","end","daysToDayOfWeek","daysToAdd","getUTCDay","makeMoment","invalid","preparse","isMoment","pickBy","moments","dayOfMonth","makeAccessor","keepTime","daysToYears","yearsToDays","makeDurationGetter","VERSION","module","exports","aspNetTimeSpanJsonRegex","isoDurationRegex","isoFormat","unitMillisecondFactors","Milliseconds","Seconds","Minutes","Hours","Days","Months","Years","D","Q","DDD","dayofyear","isoweekday","isoweek","weekyear","isoweekyear","ordinalizeTokens","paddedTokens","MMM","monthsShort","MMMM","dd","weekdaysMin","ddd","weekdaysShort","dddd","isoWeek","YY","YYYY","YYYYY","YYYYYY","gggg","ggggg","isoWeekYear","GGGG","GGGGG","isoWeekday","meridiem","A","H","S","SS","SSS","SSSS","Z","ZZ","z","zoneAbbr","zz","zoneName","X","unix","lists","pop","DDDD","_monthsShort","monthName","regex","_monthsParse","_weekdays","_weekdaysShort","_weekdaysMin","weekdayName","_weekdaysParse","_longDateFormat","LT","L","LL","LLL","LLLL","toUpperCase","charAt","isLower","_calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","calendar","_relativeTime","future","past","mm","hh","MM","yy","pastFuture","diff","_ordinal","postformat","_invalidDate","max","ret","parseIso","diffRes","isDuration","inp","version","defaultFormat","relativeTimeThreshold","threshold","limit","lang","values","defineLocale","_abbr","abbr","langData","flags","parseZone","toDate","toISOString","toArray","isDSTShifted","parsingFlags","invalidAt","keepLocalTime","_dateTzOffset","inputString","subtract","asFloat","daysAdjust","that","zoneDiff","startOf","time","humanize","fromNow","sod","isDST","endOf","isSame","localAdjust","_changeInProgress","hasAlignedHourOffset","isoWeeksInYear","weekInfo","get","newLocaleData","getTimezoneOffset","dates","isoWeeks","toJSON","withSuffix","toIsoString","asSeconds","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears"],"mappings":"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","file":"components/datepicker.js","sourcesContent":["/*! UIkit 2.17.0 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */\n(function(addon) {\n\n    var component;\n\n    if (window.UIkit) {\n        component = addon(UIkit);\n    }\n\n    if (typeof define == \"function\" && define.amd) {\n        define(\"uikit-datepicker\", [\"uikit\"], function(){\n            return component || addon(UIkit);\n        });\n    }\n\n})(function(UI){\n\n    \"use strict\";\n\n    // Datepicker\n\n    var active = false, dropdown, moment;\n\n    UI.component('datepicker', {\n\n        defaults: {\n            mobile: false,\n            weekstart: 1,\n            i18n: {\n                months        : ['January','February','March','April','May','June','July','August','September','October','November','December'],\n                weekdays      : ['Sun','Mon','Tue','Wed','Thu','Fri','Sat']\n            },\n            format: \"DD.MM.YYYY\",\n            offsettop: 5,\n            maxDate: false,\n            minDate: false,\n            template: function(data, opts) {\n\n                var content = '', maxDate, minDate, i;\n\n                if (opts.maxDate!==false){\n                    maxDate = isNaN(opts.maxDate) ? moment(opts.maxDate, opts.format) : moment().add(opts.maxDate, 'days');\n                }\n\n                if (opts.minDate!==false){\n                    minDate = isNaN(opts.minDate) ? moment(opts.minDate, opts.format) : moment().add(opts.minDate-1, 'days');\n                }\n\n                content += '<div class=\"uk-datepicker-nav\">';\n                content += '<a href=\"\" class=\"uk-datepicker-previous\"></a>';\n                content += '<a href=\"\" class=\"uk-datepicker-next\"></a>';\n\n                if (UI.formSelect) {\n\n                    var currentyear = (new Date()).getFullYear(), options = [], months, years, minYear, maxYear;\n\n                    for (i=0;i<opts.i18n.months.length;i++) {\n                        if(i==data.month) {\n                            options.push('<option value=\"'+i+'\" selected>'+opts.i18n.months[i]+'</option>');\n                        } else {\n                            options.push('<option value=\"'+i+'\">'+opts.i18n.months[i]+'</option>');\n                        }\n                    }\n\n                    months = '<span class=\"uk-form-select\">'+ opts.i18n.months[data.month] + '<select class=\"update-picker-month\">'+options.join('')+'</select></span>';\n\n                    // --\n\n                    options = [];\n\n                    minYear = minDate ? minDate.year() : currentyear - 50;\n                    maxYear = maxDate ? maxDate.year() : currentyear + 20;\n\n                    for (i=minYear;i<=maxYear;i++) {\n                        if (i == data.year) {\n                            options.push('<option value=\"'+i+'\" selected>'+i+'</option>');\n                        } else {\n                            options.push('<option value=\"'+i+'\">'+i+'</option>');\n                        }\n                    }\n\n                    years  = '<span class=\"uk-form-select\">'+ data.year + '<select class=\"update-picker-year\">'+options.join('')+'</select></span>';\n\n                    content += '<div class=\"uk-datepicker-heading\">'+ months + ' ' + years +'</div>';\n\n                } else {\n                    content += '<div class=\"uk-datepicker-heading\">'+ opts.i18n.months[data.month] +' '+ data.year+'</div>';\n                }\n\n                content += '</div>';\n\n                content += '<table class=\"uk-datepicker-table\">';\n                content += '<thead>';\n                for(i = 0; i < data.weekdays.length; i++) {\n                    if (data.weekdays[i]) {\n                        content += '<th>'+data.weekdays[i]+'</th>';\n                    }\n                }\n                content += '</thead>';\n\n                content += '<tbody>';\n                for(i = 0; i < data.days.length; i++) {\n                    if (data.days[i] && data.days[i].length){\n                        content += '<tr>';\n                        for(var d = 0; d < data.days[i].length; d++) {\n                            if (data.days[i][d]) {\n                                var day = data.days[i][d],\n                                    cls = [];\n\n                                if(!day.inmonth) cls.push(\"uk-datepicker-table-muted\");\n                                if(day.selected) cls.push(\"uk-active\");\n\n                                if (maxDate && day.day > maxDate) cls.push('uk-datepicker-date-disabled uk-datepicker-table-muted');\n                                if (minDate && minDate > day.day) cls.push('uk-datepicker-date-disabled uk-datepicker-table-muted');\n\n                                content += '<td><a href=\"\" class=\"'+cls.join(\" \")+'\" data-date=\"'+day.day.format()+'\">'+day.day.format(\"D\")+'</a></td>';\n                            }\n                        }\n                        content += '</tr>';\n                    }\n                }\n                content += '</tbody>';\n\n                content += '</table>';\n\n                return content;\n            }\n        },\n\n        boot: function() {\n\n            UI.$win.on(\"resize orientationchange\", function() {\n\n                if (active) {\n                    active.hide();\n                }\n            });\n\n            // init code\n            UI.$html.on(\"focus.datepicker.uikit\", \"[data-uk-datepicker]\", function(e) {\n\n                var ele = UI.$(this);\n\n                if (!ele.data(\"datepicker\")) {\n                    e.preventDefault();\n                    var obj = UI.datepicker(ele, UI.Utils.options(ele.attr(\"data-uk-datepicker\")));\n                    ele.trigger(\"focus\");\n                }\n            });\n\n            UI.$html.on(\"click.datepicker.uikit\", function(e) {\n\n                var target = UI.$(e.target);\n\n                if (active && target[0] != dropdown[0] && !target.data(\"datepicker\") && !target.parents(\".uk-datepicker:first\").length) {\n                    active.hide();\n                }\n            });\n        },\n\n        init: function() {\n\n            // use native datepicker on touch devices\n            if (UI.support.touch && this.element.attr('type')=='date' && !this.options.mobile) {\n                return;\n            }\n\n            var $this = this;\n\n            this.current  = this.element.val() ? moment(this.element.val(), this.options.format) : moment();\n\n            this.on(\"click\", function(){\n                if (active!==$this) $this.pick(this.value);\n            }).on(\"change\", function(){\n\n                if ($this.element.val() && !moment($this.element.val(), $this.options.format).isValid()) {\n                   $this.element.val(moment().format($this.options.format));\n                }\n            });\n\n            // init dropdown\n            if (!dropdown) {\n\n                dropdown = UI.$('<div class=\"uk-dropdown uk-datepicker\"></div>');\n\n                dropdown.on(\"click\", \".uk-datepicker-next, .uk-datepicker-previous, [data-date]\", function(e){\n\n                    e.stopPropagation();\n                    e.preventDefault();\n\n                    var ele = UI.$(this);\n\n                    if (ele.hasClass('uk-datepicker-date-disabled')) return false;\n\n                    if (ele.is('[data-date]')) {\n                        active.element.val(moment(ele.data(\"date\")).format(active.options.format)).trigger(\"change\");\n                        dropdown.hide();\n                        active = false;\n                    } else {\n                       active.add(1 * (ele.hasClass(\"uk-datepicker-next\") ? 1:-1), \"months\");\n                    }\n                });\n\n                dropdown.on('change', '.update-picker-month, .update-picker-year', function(){\n\n                    var select = UI.$(this);\n                    active[select.is('.update-picker-year') ? 'setYear':'setMonth'](Number(select.val()));\n                });\n\n                dropdown.appendTo(\"body\");\n            }\n        },\n\n        pick: function(initdate) {\n\n            var offset = this.element.offset(),\n                css    = {\"top\": offset.top + this.element.outerHeight() + this.options.offsettop, \"left\": offset.left, \"right\":\"\"};\n\n            this.current  = initdate ? moment(initdate, this.options.format):moment();\n            this.initdate = this.current.format(\"YYYY-MM-DD\");\n\n            this.update();\n\n            if (UI.langdirection == 'right') {\n                css.right = window.innerWidth - (css.left + this.element.outerWidth());\n                css.left  = \"\";\n            }\n\n            dropdown.css(css).show();\n            this.trigger('show.uk.datepicker');\n\n            active = this;\n        },\n\n        add: function(unit, value) {\n            this.current.add(unit, value);\n            this.update();\n        },\n\n        setMonth: function(month) {\n            this.current.month(month);\n            this.update();\n        },\n\n        setYear: function(year) {\n            this.current.year(year);\n            this.update();\n        },\n\n        update: function() {\n\n            var data = this.getRows(this.current.year(), this.current.month()),\n                tpl  = this.options.template(data, this.options);\n\n            dropdown.html(tpl);\n\n            this.trigger('update.uk.datepicker');\n        },\n\n        getRows: function(year, month) {\n\n            var opts   = this.options,\n                now    = moment().format('YYYY-MM-DD'),\n                days   = [31, (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month],\n                before = new Date(year, month, 1).getDay(),\n                data   = {\"month\":month, \"year\":year,\"weekdays\":[],\"days\":[]},\n                row    = [];\n\n            data.weekdays = (function(){\n\n                for (var i=0, arr=[]; i < 7; i++) {\n\n                    var day = i + (opts.weekstart || 0);\n\n                    while (day >= 7) {\n                        day -= 7;\n                    }\n\n                    arr.push(opts.i18n.weekdays[day]);\n                }\n\n                return arr;\n            })();\n\n            if (opts.weekstart && opts.weekstart > 0) {\n                before -= opts.weekstart;\n                if (before < 0) {\n                    before += 7;\n                }\n            }\n\n            var cells = days + before, after = cells;\n\n            while(after > 7) { after -= 7; }\n\n            cells += 7 - after;\n\n            var day, isDisabled, isSelected, isToday, isInMonth;\n\n            for (var i = 0, r = 0; i < cells; i++) {\n\n                day        = new Date(year, month, 1 + (i - before));\n                isDisabled = (opts.mindate && day < opts.mindate) || (opts.maxdate && day > opts.maxdate);\n                isInMonth  = !(i < before || i >= (days + before));\n\n                day = moment(day);\n\n                isSelected = this.initdate == day.format(\"YYYY-MM-DD\");\n                isToday    = now == day.format(\"YYYY-MM-DD\");\n\n                row.push({\"selected\": isSelected, \"today\": isToday, \"disabled\": isDisabled, \"day\":day, \"inmonth\":isInMonth});\n\n                if (++r === 7) {\n                    data.days.push(row);\n                    row = [];\n                    r = 0;\n                }\n            }\n\n            return data;\n        },\n\n        hide: function() {\n\n            if (active && active === this) {\n                dropdown.hide();\n                active = false;\n\n                this.trigger('hide.uk.datepicker');\n            }\n        }\n    });\n\n    //! moment.js\n    //! version : 2.8.3\n    //! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n    //! license : MIT\n    //! momentjs.com\n\n    moment = (function (undefined) {\n        /************************************\n            Constants\n        ************************************/\n        var moment,\n            VERSION = '2.8.3',\n            // the global-scope this is NOT the global object in Node.js\n            globalScope = typeof global !== 'undefined' ? global : this,\n            oldGlobalMoment,\n            round = Math.round,\n            hasOwnProperty = Object.prototype.hasOwnProperty,\n            i,\n\n            YEAR = 0,\n            MONTH = 1,\n            DATE = 2,\n            HOUR = 3,\n            MINUTE = 4,\n            SECOND = 5,\n            MILLISECOND = 6,\n\n            // internal storage for locale config files\n            locales = {},\n\n            // extra moment internal properties (plugins register props here)\n            momentProperties = [],\n\n            // check for nodeJS\n            hasModule = (typeof module !== 'undefined' && module.exports),\n\n            // ASP.NET json date format regex\n            aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n            aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\n            // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n            // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n            isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\n            // format tokens\n            formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,\n            localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LT|LL?L?L?|l{1,4})/g,\n\n            // parsing token regexes\n            parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n            parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n            parseTokenOneToFourDigits = /\\d{1,4}/, // 0 - 9999\n            parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n            parseTokenDigits = /\\d+/, // nonzero number of digits\n            parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.\n            parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n            parseTokenT = /T/i, // T (ISO separator)\n            parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n            parseTokenOrdinal = /\\d{1,2}/,\n\n            //strict parsing regexes\n            parseTokenOneDigit = /\\d/, // 0 - 9\n            parseTokenTwoDigits = /\\d\\d/, // 00 - 99\n            parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n            parseTokenFourDigits = /\\d{4}/, // 0000 - 9999\n            parseTokenSixDigits = /[+-]?\\d{6}/, // -999,999 - 999,999\n            parseTokenSignedNumber = /[+-]?\\d+/, // -inf - inf\n\n            // iso 8601 regex\n            // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n            isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\n            isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n\n            isoDates = [\n                ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n                ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n                ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n                ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n                ['YYYY-DDD', /\\d{4}-\\d{3}/]\n            ],\n\n            // iso time formats and regexes\n            isoTimes = [\n                ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n                ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n                ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n                ['HH', /(T| )\\d\\d/]\n            ],\n\n            // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-15', '30']\n            parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\n            // getter and setter names\n            proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n            unitMillisecondFactors = {\n                'Milliseconds' : 1,\n                'Seconds' : 1e3,\n                'Minutes' : 6e4,\n                'Hours' : 36e5,\n                'Days' : 864e5,\n                'Months' : 2592e6,\n                'Years' : 31536e6\n            },\n\n            unitAliases = {\n                ms : 'millisecond',\n                s : 'second',\n                m : 'minute',\n                h : 'hour',\n                d : 'day',\n                D : 'date',\n                w : 'week',\n                W : 'isoWeek',\n                M : 'month',\n                Q : 'quarter',\n                y : 'year',\n                DDD : 'dayOfYear',\n                e : 'weekday',\n                E : 'isoWeekday',\n                gg: 'weekYear',\n                GG: 'isoWeekYear'\n            },\n\n            camelFunctions = {\n                dayofyear : 'dayOfYear',\n                isoweekday : 'isoWeekday',\n                isoweek : 'isoWeek',\n                weekyear : 'weekYear',\n                isoweekyear : 'isoWeekYear'\n            },\n\n            // format function strings\n            formatFunctions = {},\n\n            // default relative time thresholds\n            relativeTimeThresholds = {\n                s: 45,  // seconds to minute\n                m: 45,  // minutes to hour\n                h: 22,  // hours to day\n                d: 26,  // days to month\n                M: 11   // months to year\n            },\n\n            // tokens to ordinalize and pad\n            ordinalizeTokens = 'DDD w W M D d'.split(' '),\n            paddedTokens = 'M D H h m s w W'.split(' '),\n\n            formatTokenFunctions = {\n                M    : function () {\n                    return this.month() + 1;\n                },\n                MMM  : function (format) {\n                    return this.localeData().monthsShort(this, format);\n                },\n                MMMM : function (format) {\n                    return this.localeData().months(this, format);\n                },\n                D    : function () {\n                    return this.date();\n                },\n                DDD  : function () {\n                    return this.dayOfYear();\n                },\n                d    : function () {\n                    return this.day();\n                },\n                dd   : function (format) {\n                    return this.localeData().weekdaysMin(this, format);\n                },\n                ddd  : function (format) {\n                    return this.localeData().weekdaysShort(this, format);\n                },\n                dddd : function (format) {\n                    return this.localeData().weekdays(this, format);\n                },\n                w    : function () {\n                    return this.week();\n                },\n                W    : function () {\n                    return this.isoWeek();\n                },\n                YY   : function () {\n                    return leftZeroFill(this.year() % 100, 2);\n                },\n                YYYY : function () {\n                    return leftZeroFill(this.year(), 4);\n                },\n                YYYYY : function () {\n                    return leftZeroFill(this.year(), 5);\n                },\n                YYYYYY : function () {\n                    var y = this.year(), sign = y >= 0 ? '+' : '-';\n                    return sign + leftZeroFill(Math.abs(y), 6);\n                },\n                gg   : function () {\n                    return leftZeroFill(this.weekYear() % 100, 2);\n                },\n                gggg : function () {\n                    return leftZeroFill(this.weekYear(), 4);\n                },\n                ggggg : function () {\n                    return leftZeroFill(this.weekYear(), 5);\n                },\n                GG   : function () {\n                    return leftZeroFill(this.isoWeekYear() % 100, 2);\n                },\n                GGGG : function () {\n                    return leftZeroFill(this.isoWeekYear(), 4);\n                },\n                GGGGG : function () {\n                    return leftZeroFill(this.isoWeekYear(), 5);\n                },\n                e : function () {\n                    return this.weekday();\n                },\n                E : function () {\n                    return this.isoWeekday();\n                },\n                a    : function () {\n                    return this.localeData().meridiem(this.hours(), this.minutes(), true);\n                },\n                A    : function () {\n                    return this.localeData().meridiem(this.hours(), this.minutes(), false);\n                },\n                H    : function () {\n                    return this.hours();\n                },\n                h    : function () {\n                    return this.hours() % 12 || 12;\n                },\n                m    : function () {\n                    return this.minutes();\n                },\n                s    : function () {\n                    return this.seconds();\n                },\n                S    : function () {\n                    return toInt(this.milliseconds() / 100);\n                },\n                SS   : function () {\n                    return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n                },\n                SSS  : function () {\n                    return leftZeroFill(this.milliseconds(), 3);\n                },\n                SSSS : function () {\n                    return leftZeroFill(this.milliseconds(), 3);\n                },\n                Z    : function () {\n                    var a = -this.zone(),\n                        b = '+';\n                    if (a < 0) {\n                        a = -a;\n                        b = '-';\n                    }\n                    return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);\n                },\n                ZZ   : function () {\n                    var a = -this.zone(),\n                        b = '+';\n                    if (a < 0) {\n                        a = -a;\n                        b = '-';\n                    }\n                    return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n                },\n                z : function () {\n                    return this.zoneAbbr();\n                },\n                zz : function () {\n                    return this.zoneName();\n                },\n                X    : function () {\n                    return this.unix();\n                },\n                Q : function () {\n                    return this.quarter();\n                }\n            },\n\n            deprecations = {},\n\n            lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'];\n\n        // Pick the first defined of two or three arguments. dfl comes from\n        // default.\n        function dfl(a, b, c) {\n            switch (arguments.length) {\n                case 2: return a != null ? a : b;\n                case 3: return a != null ? a : b != null ? b : c;\n                default: throw new Error('Implement me');\n            }\n        }\n\n        function hasOwnProp(a, b) {\n            return hasOwnProperty.call(a, b);\n        }\n\n        function defaultParsingFlags() {\n            // We need to deep clone this object, and es5 standard is not very\n            // helpful.\n            return {\n                empty : false,\n                unusedTokens : [],\n                unusedInput : [],\n                overflow : -2,\n                charsLeftOver : 0,\n                nullInput : false,\n                invalidMonth : null,\n                invalidFormat : false,\n                userInvalidated : false,\n                iso: false\n            };\n        }\n\n        function printMsg(msg) {\n            if (moment.suppressDeprecationWarnings === false &&\n                    typeof console !== 'undefined' && console.warn) {\n                console.warn('Deprecation warning: ' + msg);\n            }\n        }\n\n        function deprecate(msg, fn) {\n            var firstTime = true;\n            return extend(function () {\n                if (firstTime) {\n                    printMsg(msg);\n                    firstTime = false;\n                }\n                return fn.apply(this, arguments);\n            }, fn);\n        }\n\n        function deprecateSimple(name, msg) {\n            if (!deprecations[name]) {\n                printMsg(msg);\n                deprecations[name] = true;\n            }\n        }\n\n        function padToken(func, count) {\n            return function (a) {\n                return leftZeroFill(func.call(this, a), count);\n            };\n        }\n        function ordinalizeToken(func, period) {\n            return function (a) {\n                return this.localeData().ordinal(func.call(this, a), period);\n            };\n        }\n\n        while (ordinalizeTokens.length) {\n            i = ordinalizeTokens.pop();\n            formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);\n        }\n        while (paddedTokens.length) {\n            i = paddedTokens.pop();\n            formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n        }\n        formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\n\n        /************************************\n            Constructors\n        ************************************/\n\n        function Locale() {\n        }\n\n        // Moment prototype object\n        function Moment(config, skipOverflow) {\n            if (skipOverflow !== false) {\n                checkOverflow(config);\n            }\n            copyConfig(this, config);\n            this._d = new Date(+config._d);\n        }\n\n        // Duration Constructor\n        function Duration(duration) {\n            var normalizedInput = normalizeObjectUnits(duration),\n                years = normalizedInput.year || 0,\n                quarters = normalizedInput.quarter || 0,\n                months = normalizedInput.month || 0,\n                weeks = normalizedInput.week || 0,\n                days = normalizedInput.day || 0,\n                hours = normalizedInput.hour || 0,\n                minutes = normalizedInput.minute || 0,\n                seconds = normalizedInput.second || 0,\n                milliseconds = normalizedInput.millisecond || 0;\n\n            // representation for dateAddRemove\n            this._milliseconds = +milliseconds +\n                seconds * 1e3 + // 1000\n                minutes * 6e4 + // 1000 * 60\n                hours * 36e5; // 1000 * 60 * 60\n            // Because of dateAddRemove treats 24 hours as different from a\n            // day when working around DST, we need to store them separately\n            this._days = +days +\n                weeks * 7;\n            // It is impossible translate months into days without knowing\n            // which months you are are talking about, so we have to store\n            // it separately.\n            this._months = +months +\n                quarters * 3 +\n                years * 12;\n\n            this._data = {};\n\n            this._locale = moment.localeData();\n\n            this._bubble();\n        }\n\n        /************************************\n            Helpers\n        ************************************/\n\n\n        function extend(a, b) {\n            for (var i in b) {\n                if (hasOwnProp(b, i)) {\n                    a[i] = b[i];\n                }\n            }\n\n            if (hasOwnProp(b, 'toString')) {\n                a.toString = b.toString;\n            }\n\n            if (hasOwnProp(b, 'valueOf')) {\n                a.valueOf = b.valueOf;\n            }\n\n            return a;\n        }\n\n        function copyConfig(to, from) {\n            var i, prop, val;\n\n            if (typeof from._isAMomentObject !== 'undefined') {\n                to._isAMomentObject = from._isAMomentObject;\n            }\n            if (typeof from._i !== 'undefined') {\n                to._i = from._i;\n            }\n            if (typeof from._f !== 'undefined') {\n                to._f = from._f;\n            }\n            if (typeof from._l !== 'undefined') {\n                to._l = from._l;\n            }\n            if (typeof from._strict !== 'undefined') {\n                to._strict = from._strict;\n            }\n            if (typeof from._tzm !== 'undefined') {\n                to._tzm = from._tzm;\n            }\n            if (typeof from._isUTC !== 'undefined') {\n                to._isUTC = from._isUTC;\n            }\n            if (typeof from._offset !== 'undefined') {\n                to._offset = from._offset;\n            }\n            if (typeof from._pf !== 'undefined') {\n                to._pf = from._pf;\n            }\n            if (typeof from._locale !== 'undefined') {\n                to._locale = from._locale;\n            }\n\n            if (momentProperties.length > 0) {\n                for (i in momentProperties) {\n                    prop = momentProperties[i];\n                    val = from[prop];\n                    if (typeof val !== 'undefined') {\n                        to[prop] = val;\n                    }\n                }\n            }\n\n            return to;\n        }\n\n        function absRound(number) {\n            if (number < 0) {\n                return Math.ceil(number);\n            } else {\n                return Math.floor(number);\n            }\n        }\n\n        // left zero fill a number\n        // see http://jsperf.com/left-zero-filling for performance comparison\n        function leftZeroFill(number, targetLength, forceSign) {\n            var output = '' + Math.abs(number),\n                sign = number >= 0;\n\n            while (output.length < targetLength) {\n                output = '0' + output;\n            }\n            return (sign ? (forceSign ? '+' : '') : '-') + output;\n        }\n\n        function positiveMomentsDifference(base, other) {\n            var res = {milliseconds: 0, months: 0};\n\n            res.months = other.month() - base.month() +\n                (other.year() - base.year()) * 12;\n            if (base.clone().add(res.months, 'M').isAfter(other)) {\n                --res.months;\n            }\n\n            res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n            return res;\n        }\n\n        function momentsDifference(base, other) {\n            var res;\n            other = makeAs(other, base);\n            if (base.isBefore(other)) {\n                res = positiveMomentsDifference(base, other);\n            } else {\n                res = positiveMomentsDifference(other, base);\n                res.milliseconds = -res.milliseconds;\n                res.months = -res.months;\n            }\n\n            return res;\n        }\n\n        // TODO: remove 'name' arg after deprecation is removed\n        function createAdder(direction, name) {\n            return function (val, period) {\n                var dur, tmp;\n                //invert the arguments, but complain about it\n                if (period !== null && !isNaN(+period)) {\n                    deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                    tmp = val; val = period; period = tmp;\n                }\n\n                val = typeof val === 'string' ? +val : val;\n                dur = moment.duration(val, period);\n                addOrSubtractDurationFromMoment(this, dur, direction);\n                return this;\n            };\n        }\n\n        function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n            var milliseconds = duration._milliseconds,\n                days = duration._days,\n                months = duration._months;\n            updateOffset = updateOffset == null ? true : updateOffset;\n\n            if (milliseconds) {\n                mom._d.setTime(+mom._d + milliseconds * isAdding);\n            }\n            if (days) {\n                rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);\n            }\n            if (months) {\n                rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);\n            }\n            if (updateOffset) {\n                moment.updateOffset(mom, days || months);\n            }\n        }\n\n        // check if is an array\n        function isArray(input) {\n            return Object.prototype.toString.call(input) === '[object Array]';\n        }\n\n        function isDate(input) {\n            return Object.prototype.toString.call(input) === '[object Date]' ||\n                input instanceof Date;\n        }\n\n        // compare two arrays, return the number of differences\n        function compareArrays(array1, array2, dontConvert) {\n            var len = Math.min(array1.length, array2.length),\n                lengthDiff = Math.abs(array1.length - array2.length),\n                diffs = 0,\n                i;\n            for (i = 0; i < len; i++) {\n                if ((dontConvert && array1[i] !== array2[i]) ||\n                    (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                    diffs++;\n                }\n            }\n            return diffs + lengthDiff;\n        }\n\n        function normalizeUnits(units) {\n            if (units) {\n                var lowered = units.toLowerCase().replace(/(.)s$/, '$1');\n                units = unitAliases[units] || camelFunctions[lowered] || lowered;\n            }\n            return units;\n        }\n\n        function normalizeObjectUnits(inputObject) {\n            var normalizedInput = {},\n                normalizedProp,\n                prop;\n\n            for (prop in inputObject) {\n                if (hasOwnProp(inputObject, prop)) {\n                    normalizedProp = normalizeUnits(prop);\n                    if (normalizedProp) {\n                        normalizedInput[normalizedProp] = inputObject[prop];\n                    }\n                }\n            }\n\n            return normalizedInput;\n        }\n\n        function makeList(field) {\n            var count, setter;\n\n            if (field.indexOf('week') === 0) {\n                count = 7;\n                setter = 'day';\n            }\n            else if (field.indexOf('month') === 0) {\n                count = 12;\n                setter = 'month';\n            }\n            else {\n                return;\n            }\n\n            moment[field] = function (format, index) {\n                var i, getter,\n                    method = moment._locale[field],\n                    results = [];\n\n                if (typeof format === 'number') {\n                    index = format;\n                    format = undefined;\n                }\n\n                getter = function (i) {\n                    var m = moment().utc().set(setter, i);\n                    return method.call(moment._locale, m, format || '');\n                };\n\n                if (index != null) {\n                    return getter(index);\n                }\n                else {\n                    for (i = 0; i < count; i++) {\n                        results.push(getter(i));\n                    }\n                    return results;\n                }\n            };\n        }\n\n        function toInt(argumentForCoercion) {\n            var coercedNumber = +argumentForCoercion,\n                value = 0;\n\n            if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n                if (coercedNumber >= 0) {\n                    value = Math.floor(coercedNumber);\n                } else {\n                    value = Math.ceil(coercedNumber);\n                }\n            }\n\n            return value;\n        }\n\n        function daysInMonth(year, month) {\n            return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n        }\n\n        function weeksInYear(year, dow, doy) {\n            return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n        }\n\n        function daysInYear(year) {\n            return isLeapYear(year) ? 366 : 365;\n        }\n\n        function isLeapYear(year) {\n            return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n        }\n\n        function checkOverflow(m) {\n            var overflow;\n            if (m._a && m._pf.overflow === -2) {\n                overflow =\n                    m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :\n                    m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :\n                    m._a[HOUR] < 0 || m._a[HOUR] > 23 ? HOUR :\n                    m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :\n                    m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :\n                    m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :\n                    -1;\n\n                if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                    overflow = DATE;\n                }\n\n                m._pf.overflow = overflow;\n            }\n        }\n\n        function isValid(m) {\n            if (m._isValid == null) {\n                m._isValid = !isNaN(m._d.getTime()) &&\n                    m._pf.overflow < 0 &&\n                    !m._pf.empty &&\n                    !m._pf.invalidMonth &&\n                    !m._pf.nullInput &&\n                    !m._pf.invalidFormat &&\n                    !m._pf.userInvalidated;\n\n                if (m._strict) {\n                    m._isValid = m._isValid &&\n                        m._pf.charsLeftOver === 0 &&\n                        m._pf.unusedTokens.length === 0;\n                }\n            }\n            return m._isValid;\n        }\n\n        function normalizeLocale(key) {\n            return key ? key.toLowerCase().replace('_', '-') : key;\n        }\n\n        // pick the locale from the array\n        // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n        // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n        function chooseLocale(names) {\n            var i = 0, j, next, locale, split;\n\n            while (i < names.length) {\n                split = normalizeLocale(names[i]).split('-');\n                j = split.length;\n                next = normalizeLocale(names[i + 1]);\n                next = next ? next.split('-') : null;\n                while (j > 0) {\n                    locale = loadLocale(split.slice(0, j).join('-'));\n                    if (locale) {\n                        return locale;\n                    }\n                    if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                        //the next array item is better than a shallower substring of this one\n                        break;\n                    }\n                    j--;\n                }\n                i++;\n            }\n            return null;\n        }\n\n        function loadLocale(name) {\n            var oldLocale = null;\n            if (!locales[name] && hasModule) {\n                try {\n                    oldLocale = moment.locale();\n                    require('./locale/' + name);\n                    // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n                    moment.locale(oldLocale);\n                } catch (e) { }\n            }\n            return locales[name];\n        }\n\n        // Return a moment from input, that is local/utc/zone equivalent to model.\n        function makeAs(input, model) {\n            return model._isUTC ? moment(input).zone(model._offset || 0) :\n                moment(input).local();\n        }\n\n        /************************************\n            Locale\n        ************************************/\n\n\n        extend(Locale.prototype, {\n\n            set : function (config) {\n                var prop, i;\n                for (i in config) {\n                    prop = config[i];\n                    if (typeof prop === 'function') {\n                        this[i] = prop;\n                    } else {\n                        this['_' + i] = prop;\n                    }\n                }\n            },\n\n            _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n            months : function (m) {\n                return this._months[m.month()];\n            },\n\n            _monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n            monthsShort : function (m) {\n                return this._monthsShort[m.month()];\n            },\n\n            monthsParse : function (monthName) {\n                var i, mom, regex;\n\n                if (!this._monthsParse) {\n                    this._monthsParse = [];\n                }\n\n                for (i = 0; i < 12; i++) {\n                    // make the regex if we don't have it already\n                    if (!this._monthsParse[i]) {\n                        mom = moment.utc([2000, i]);\n                        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                    }\n                    // test the regex\n                    if (this._monthsParse[i].test(monthName)) {\n                        return i;\n                    }\n                }\n            },\n\n            _weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n            weekdays : function (m) {\n                return this._weekdays[m.day()];\n            },\n\n            _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n            weekdaysShort : function (m) {\n                return this._weekdaysShort[m.day()];\n            },\n\n            _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n            weekdaysMin : function (m) {\n                return this._weekdaysMin[m.day()];\n            },\n\n            weekdaysParse : function (weekdayName) {\n                var i, mom, regex;\n\n                if (!this._weekdaysParse) {\n                    this._weekdaysParse = [];\n                }\n\n                for (i = 0; i < 7; i++) {\n                    // make the regex if we don't have it already\n                    if (!this._weekdaysParse[i]) {\n                        mom = moment([2000, 1]).day(i);\n                        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                    }\n                    // test the regex\n                    if (this._weekdaysParse[i].test(weekdayName)) {\n                        return i;\n                    }\n                }\n            },\n\n            _longDateFormat : {\n                LT : 'h:mm A',\n                L : 'MM/DD/YYYY',\n                LL : 'MMMM D, YYYY',\n                LLL : 'MMMM D, YYYY LT',\n                LLLL : 'dddd, MMMM D, YYYY LT'\n            },\n            longDateFormat : function (key) {\n                var output = this._longDateFormat[key];\n                if (!output && this._longDateFormat[key.toUpperCase()]) {\n                    output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                        return val.slice(1);\n                    });\n                    this._longDateFormat[key] = output;\n                }\n                return output;\n            },\n\n            isPM : function (input) {\n                // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n                // Using charAt should be more compatible.\n                return ((input + '').toLowerCase().charAt(0) === 'p');\n            },\n\n            _meridiemParse : /[ap]\\.?m?\\.?/i,\n            meridiem : function (hours, minutes, isLower) {\n                if (hours > 11) {\n                    return isLower ? 'pm' : 'PM';\n                } else {\n                    return isLower ? 'am' : 'AM';\n                }\n            },\n\n            _calendar : {\n                sameDay : '[Today at] LT',\n                nextDay : '[Tomorrow at] LT',\n                nextWeek : 'dddd [at] LT',\n                lastDay : '[Yesterday at] LT',\n                lastWeek : '[Last] dddd [at] LT',\n                sameElse : 'L'\n            },\n            calendar : function (key, mom) {\n                var output = this._calendar[key];\n                return typeof output === 'function' ? output.apply(mom) : output;\n            },\n\n            _relativeTime : {\n                future : 'in %s',\n                past : '%s ago',\n                s : 'a few seconds',\n                m : 'a minute',\n                mm : '%d minutes',\n                h : 'an hour',\n                hh : '%d hours',\n                d : 'a day',\n                dd : '%d days',\n                M : 'a month',\n                MM : '%d months',\n                y : 'a year',\n                yy : '%d years'\n            },\n\n            relativeTime : function (number, withoutSuffix, string, isFuture) {\n                var output = this._relativeTime[string];\n                return (typeof output === 'function') ?\n                    output(number, withoutSuffix, string, isFuture) :\n                    output.replace(/%d/i, number);\n            },\n\n            pastFuture : function (diff, output) {\n                var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n                return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n            },\n\n            ordinal : function (number) {\n                return this._ordinal.replace('%d', number);\n            },\n            _ordinal : '%d',\n\n            preparse : function (string) {\n                return string;\n            },\n\n            postformat : function (string) {\n                return string;\n            },\n\n            week : function (mom) {\n                return weekOfYear(mom, this._week.dow, this._week.doy).week;\n            },\n\n            _week : {\n                dow : 0, // Sunday is the first day of the week.\n                doy : 6  // The week that contains Jan 1st is the first week of the year.\n            },\n\n            _invalidDate: 'Invalid date',\n            invalidDate: function () {\n                return this._invalidDate;\n            }\n        });\n\n        /************************************\n            Formatting\n        ************************************/\n\n\n        function removeFormattingTokens(input) {\n            if (input.match(/\\[[\\s\\S]/)) {\n                return input.replace(/^\\[|\\]$/g, '');\n            }\n            return input.replace(/\\\\/g, '');\n        }\n\n        function makeFormatFunction(format) {\n            var array = format.match(formattingTokens), i, length;\n\n            for (i = 0, length = array.length; i < length; i++) {\n                if (formatTokenFunctions[array[i]]) {\n                    array[i] = formatTokenFunctions[array[i]];\n                } else {\n                    array[i] = removeFormattingTokens(array[i]);\n                }\n            }\n\n            return function (mom) {\n                var output = '';\n                for (i = 0; i < length; i++) {\n                    output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n                }\n                return output;\n            };\n        }\n\n        // format date using native date object\n        function formatMoment(m, format) {\n            if (!m.isValid()) {\n                return m.localeData().invalidDate();\n            }\n\n            format = expandFormat(format, m.localeData());\n\n            if (!formatFunctions[format]) {\n                formatFunctions[format] = makeFormatFunction(format);\n            }\n\n            return formatFunctions[format](m);\n        }\n\n        function expandFormat(format, locale) {\n            var i = 5;\n\n            function replaceLongDateFormatTokens(input) {\n                return locale.longDateFormat(input) || input;\n            }\n\n            localFormattingTokens.lastIndex = 0;\n            while (i >= 0 && localFormattingTokens.test(format)) {\n                format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n                localFormattingTokens.lastIndex = 0;\n                i -= 1;\n            }\n\n            return format;\n        }\n\n\n        /************************************\n            Parsing\n        ************************************/\n\n\n        // get the regex to find the next token\n        function getParseRegexForToken(token, config) {\n            var a, strict = config._strict;\n            switch (token) {\n            case 'Q':\n                return parseTokenOneDigit;\n            case 'DDDD':\n                return parseTokenThreeDigits;\n            case 'YYYY':\n            case 'GGGG':\n            case 'gggg':\n                return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n            case 'Y':\n            case 'G':\n            case 'g':\n                return parseTokenSignedNumber;\n            case 'YYYYYY':\n            case 'YYYYY':\n            case 'GGGGG':\n            case 'ggggg':\n                return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n            case 'S':\n                if (strict) {\n                    return parseTokenOneDigit;\n                }\n                /* falls through */\n            case 'SS':\n                if (strict) {\n                    return parseTokenTwoDigits;\n                }\n                /* falls through */\n            case 'SSS':\n                if (strict) {\n                    return parseTokenThreeDigits;\n                }\n                /* falls through */\n            case 'DDD':\n                return parseTokenOneToThreeDigits;\n            case 'MMM':\n            case 'MMMM':\n            case 'dd':\n            case 'ddd':\n            case 'dddd':\n                return parseTokenWord;\n            case 'a':\n            case 'A':\n                return config._locale._meridiemParse;\n            case 'X':\n                return parseTokenTimestampMs;\n            case 'Z':\n            case 'ZZ':\n                return parseTokenTimezone;\n            case 'T':\n                return parseTokenT;\n            case 'SSSS':\n                return parseTokenDigits;\n            case 'MM':\n            case 'DD':\n            case 'YY':\n            case 'GG':\n            case 'gg':\n            case 'HH':\n            case 'hh':\n            case 'mm':\n            case 'ss':\n            case 'ww':\n            case 'WW':\n                return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n            case 'M':\n            case 'D':\n            case 'd':\n            case 'H':\n            case 'h':\n            case 'm':\n            case 's':\n            case 'w':\n            case 'W':\n            case 'e':\n            case 'E':\n                return parseTokenOneOrTwoDigits;\n            case 'Do':\n                return parseTokenOrdinal;\n            default :\n                a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\\\', '')), 'i'));\n                return a;\n            }\n        }\n\n        function timezoneMinutesFromString(string) {\n            string = string || '';\n            var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n                tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n                parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n                minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n            return parts[0] === '+' ? -minutes : minutes;\n        }\n\n        // function to convert string input to date\n        function addTimeToArrayFromToken(token, input, config) {\n            var a, datePartArray = config._a;\n\n            switch (token) {\n            // QUARTER\n            case 'Q':\n                if (input != null) {\n                    datePartArray[MONTH] = (toInt(input) - 1) * 3;\n                }\n                break;\n            // MONTH\n            case 'M' : // fall through to MM\n            case 'MM' :\n                if (input != null) {\n                    datePartArray[MONTH] = toInt(input) - 1;\n                }\n                break;\n            case 'MMM' : // fall through to MMMM\n            case 'MMMM' :\n                a = config._locale.monthsParse(input);\n                // if we didn't find a month name, mark the date as invalid.\n                if (a != null) {\n                    datePartArray[MONTH] = a;\n                } else {\n                    config._pf.invalidMonth = input;\n                }\n                break;\n            // DAY OF MONTH\n            case 'D' : // fall through to DD\n            case 'DD' :\n                if (input != null) {\n                    datePartArray[DATE] = toInt(input);\n                }\n                break;\n            case 'Do' :\n                if (input != null) {\n                    datePartArray[DATE] = toInt(parseInt(input, 10));\n                }\n                break;\n            // DAY OF YEAR\n            case 'DDD' : // fall through to DDDD\n            case 'DDDD' :\n                if (input != null) {\n                    config._dayOfYear = toInt(input);\n                }\n\n                break;\n            // YEAR\n            case 'YY' :\n                datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n                break;\n            case 'YYYY' :\n            case 'YYYYY' :\n            case 'YYYYYY' :\n                datePartArray[YEAR] = toInt(input);\n                break;\n            // AM / PM\n            case 'a' : // fall through to A\n            case 'A' :\n                config._isPm = config._locale.isPM(input);\n                break;\n            // 24 HOUR\n            case 'H' : // fall through to hh\n            case 'HH' : // fall through to hh\n            case 'h' : // fall through to hh\n            case 'hh' :\n                datePartArray[HOUR] = toInt(input);\n                break;\n            // MINUTE\n            case 'm' : // fall through to mm\n            case 'mm' :\n                datePartArray[MINUTE] = toInt(input);\n                break;\n            // SECOND\n            case 's' : // fall through to ss\n            case 'ss' :\n                datePartArray[SECOND] = toInt(input);\n                break;\n            // MILLISECOND\n            case 'S' :\n            case 'SS' :\n            case 'SSS' :\n            case 'SSSS' :\n                datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);\n                break;\n            // UNIX TIMESTAMP WITH MS\n            case 'X':\n                config._d = new Date(parseFloat(input) * 1000);\n                break;\n            // TIMEZONE\n            case 'Z' : // fall through to ZZ\n            case 'ZZ' :\n                config._useUTC = true;\n                config._tzm = timezoneMinutesFromString(input);\n                break;\n            // WEEKDAY - human\n            case 'dd':\n            case 'ddd':\n            case 'dddd':\n                a = config._locale.weekdaysParse(input);\n                // if we didn't get a weekday name, mark the date as invalid\n                if (a != null) {\n                    config._w = config._w || {};\n                    config._w['d'] = a;\n                } else {\n                    config._pf.invalidWeekday = input;\n                }\n                break;\n            // WEEK, WEEK DAY - numeric\n            case 'w':\n            case 'ww':\n            case 'W':\n            case 'WW':\n            case 'd':\n            case 'e':\n            case 'E':\n                token = token.substr(0, 1);\n                /* falls through */\n            case 'gggg':\n            case 'GGGG':\n            case 'GGGGG':\n                token = token.substr(0, 2);\n                if (input) {\n                    config._w = config._w || {};\n                    config._w[token] = toInt(input);\n                }\n                break;\n            case 'gg':\n            case 'GG':\n                config._w = config._w || {};\n                config._w[token] = moment.parseTwoDigitYear(input);\n            }\n        }\n\n        function dayOfYearFromWeekInfo(config) {\n            var w, weekYear, week, weekday, dow, doy, temp;\n\n            w = config._w;\n            if (w.GG != null || w.W != null || w.E != null) {\n                dow = 1;\n                doy = 4;\n\n                // TODO: We need to take the current isoWeekYear, but that depends on\n                // how we interpret now (local, utc, fixed offset). So create\n                // a now version of current config (take local/utc/offset flags, and\n                // create now).\n                weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n                week = dfl(w.W, 1);\n                weekday = dfl(w.E, 1);\n            } else {\n                dow = config._locale._week.dow;\n                doy = config._locale._week.doy;\n\n                weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n                week = dfl(w.w, 1);\n\n                if (w.d != null) {\n                    // weekday -- low day numbers are considered next week\n                    weekday = w.d;\n                    if (weekday < dow) {\n                        ++week;\n                    }\n                } else if (w.e != null) {\n                    // local weekday -- counting starts from begining of week\n                    weekday = w.e + dow;\n                } else {\n                    // default to begining of week\n                    weekday = dow;\n                }\n            }\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n\n        // convert an array to a date.\n        // the array should mirror the parameters below\n        // note: all values past the year are optional and will default to the lowest possible value.\n        // [year, month, day , hour, minute, second, millisecond]\n        function dateFromConfig(config) {\n            var i, date, input = [], currentDate, yearToUse;\n\n            if (config._d) {\n                return;\n            }\n\n            currentDate = currentDateArray(config);\n\n            //compute day of the year from weeks and weekdays\n            if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n                dayOfYearFromWeekInfo(config);\n            }\n\n            //if the day of the year is set, figure out what it is\n            if (config._dayOfYear) {\n                yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\n                if (config._dayOfYear > daysInYear(yearToUse)) {\n                    config._pf._overflowDayOfYear = true;\n                }\n\n                date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n                config._a[MONTH] = date.getUTCMonth();\n                config._a[DATE] = date.getUTCDate();\n            }\n\n            // Default to current date.\n            // * if no year, month, day of month are given, default to today\n            // * if day of month is given, default month and year\n            // * if month is given, default only year\n            // * if year is given, don't default anything\n            for (i = 0; i < 3 && config._a[i] == null; ++i) {\n                config._a[i] = input[i] = currentDate[i];\n            }\n\n            // Zero out whatever was not defaulted, including time\n            for (; i < 7; i++) {\n                config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n            }\n\n            config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n            // Apply timezone offset from input. The actual zone can be changed\n            // with parseZone.\n            if (config._tzm != null) {\n                config._d.setUTCMinutes(config._d.getUTCMinutes() + config._tzm);\n            }\n        }\n\n        function dateFromObject(config) {\n            var normalizedInput;\n\n            if (config._d) {\n                return;\n            }\n\n            normalizedInput = normalizeObjectUnits(config._i);\n            config._a = [\n                normalizedInput.year,\n                normalizedInput.month,\n                normalizedInput.day,\n                normalizedInput.hour,\n                normalizedInput.minute,\n                normalizedInput.second,\n                normalizedInput.millisecond\n            ];\n\n            dateFromConfig(config);\n        }\n\n        function currentDateArray(config) {\n            var now = new Date();\n            if (config._useUTC) {\n                return [\n                    now.getUTCFullYear(),\n                    now.getUTCMonth(),\n                    now.getUTCDate()\n                ];\n            } else {\n                return [now.getFullYear(), now.getMonth(), now.getDate()];\n            }\n        }\n\n        // date from string and format string\n        function makeDateFromStringAndFormat(config) {\n            if (config._f === moment.ISO_8601) {\n                parseISO(config);\n                return;\n            }\n\n            config._a = [];\n            config._pf.empty = true;\n\n            // This array is used to make a Date, either with `new Date` or `Date.UTC`\n            var string = '' + config._i,\n                i, parsedInput, tokens, token, skipped,\n                stringLength = string.length,\n                totalParsedInputLength = 0;\n\n            tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n            for (i = 0; i < tokens.length; i++) {\n                token = tokens[i];\n                parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n                if (parsedInput) {\n                    skipped = string.substr(0, string.indexOf(parsedInput));\n                    if (skipped.length > 0) {\n                        config._pf.unusedInput.push(skipped);\n                    }\n                    string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                    totalParsedInputLength += parsedInput.length;\n                }\n                // don't parse if it's not a known token\n                if (formatTokenFunctions[token]) {\n                    if (parsedInput) {\n                        config._pf.empty = false;\n                    }\n                    else {\n                        config._pf.unusedTokens.push(token);\n                    }\n                    addTimeToArrayFromToken(token, parsedInput, config);\n                }\n                else if (config._strict && !parsedInput) {\n                    config._pf.unusedTokens.push(token);\n                }\n            }\n\n            // add remaining unparsed input length to the string\n            config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n            if (string.length > 0) {\n                config._pf.unusedInput.push(string);\n            }\n\n            // handle am pm\n            if (config._isPm && config._a[HOUR] < 12) {\n                config._a[HOUR] += 12;\n            }\n            // if is 12 am, change hours to 0\n            if (config._isPm === false && config._a[HOUR] === 12) {\n                config._a[HOUR] = 0;\n            }\n\n            dateFromConfig(config);\n            checkOverflow(config);\n        }\n\n        function unescapeFormat(s) {\n            return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n                return p1 || p2 || p3 || p4;\n            });\n        }\n\n        // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n        function regexpEscape(s) {\n            return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n        }\n\n        // date from string and array of format strings\n        function makeDateFromStringAndArray(config) {\n            var tempConfig,\n                bestMoment,\n\n                scoreToBeat,\n                i,\n                currentScore;\n\n            if (config._f.length === 0) {\n                config._pf.invalidFormat = true;\n                config._d = new Date(NaN);\n                return;\n            }\n\n            for (i = 0; i < config._f.length; i++) {\n                currentScore = 0;\n                tempConfig = copyConfig({}, config);\n                if (config._useUTC != null) {\n                    tempConfig._useUTC = config._useUTC;\n                }\n                tempConfig._pf = defaultParsingFlags();\n                tempConfig._f = config._f[i];\n                makeDateFromStringAndFormat(tempConfig);\n\n                if (!isValid(tempConfig)) {\n                    continue;\n                }\n\n                // if there is any input that was not parsed add a penalty for that format\n                currentScore += tempConfig._pf.charsLeftOver;\n\n                //or tokens\n                currentScore += tempConfig._pf.unusedTokens.length * 10;\n\n                tempConfig._pf.score = currentScore;\n\n                if (scoreToBeat == null || currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n\n            extend(config, bestMoment || tempConfig);\n        }\n\n        // date from iso format\n        function parseISO(config) {\n            var i, l,\n                string = config._i,\n                match = isoRegex.exec(string);\n\n            if (match) {\n                config._pf.iso = true;\n                for (i = 0, l = isoDates.length; i < l; i++) {\n                    if (isoDates[i][1].exec(string)) {\n                        // match[5] should be 'T' or undefined\n                        config._f = isoDates[i][0] + (match[6] || ' ');\n                        break;\n                    }\n                }\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(string)) {\n                        config._f += isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (string.match(parseTokenTimezone)) {\n                    config._f += 'Z';\n                }\n                makeDateFromStringAndFormat(config);\n            } else {\n                config._isValid = false;\n            }\n        }\n\n        // date from iso format or fallback\n        function makeDateFromString(config) {\n            parseISO(config);\n            if (config._isValid === false) {\n                delete config._isValid;\n                moment.createFromInputFallback(config);\n            }\n        }\n\n        function map(arr, fn) {\n            var res = [], i;\n            for (i = 0; i < arr.length; ++i) {\n                res.push(fn(arr[i], i));\n            }\n            return res;\n        }\n\n        function makeDateFromInput(config) {\n            var input = config._i, matched;\n            if (input === undefined) {\n                config._d = new Date();\n            } else if (isDate(input)) {\n                config._d = new Date(+input);\n            } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n                config._d = new Date(+matched[1]);\n            } else if (typeof input === 'string') {\n                makeDateFromString(config);\n            } else if (isArray(input)) {\n                config._a = map(input.slice(0), function (obj) {\n                    return parseInt(obj, 10);\n                });\n                dateFromConfig(config);\n            } else if (typeof(input) === 'object') {\n                dateFromObject(config);\n            } else if (typeof(input) === 'number') {\n                // from milliseconds\n                config._d = new Date(input);\n            } else {\n                moment.createFromInputFallback(config);\n            }\n        }\n\n        function makeDate(y, m, d, h, M, s, ms) {\n            //can't just apply() to create a date:\n            //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n            var date = new Date(y, m, d, h, M, s, ms);\n\n            //the date constructor doesn't accept years < 1970\n            if (y < 1970) {\n                date.setFullYear(y);\n            }\n            return date;\n        }\n\n        function makeUTCDate(y) {\n            var date = new Date(Date.UTC.apply(null, arguments));\n            if (y < 1970) {\n                date.setUTCFullYear(y);\n            }\n            return date;\n        }\n\n        function parseWeekday(input, locale) {\n            if (typeof input === 'string') {\n                if (!isNaN(input)) {\n                    input = parseInt(input, 10);\n                }\n                else {\n                    input = locale.weekdaysParse(input);\n                    if (typeof input !== 'number') {\n                        return null;\n                    }\n                }\n            }\n            return input;\n        }\n\n        /************************************\n            Relative Time\n        ************************************/\n\n\n        // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n        function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n            return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n        }\n\n        function relativeTime(posNegDuration, withoutSuffix, locale) {\n            var duration = moment.duration(posNegDuration).abs(),\n                seconds = round(duration.as('s')),\n                minutes = round(duration.as('m')),\n                hours = round(duration.as('h')),\n                days = round(duration.as('d')),\n                months = round(duration.as('M')),\n                years = round(duration.as('y')),\n\n                args = seconds < relativeTimeThresholds.s && ['s', seconds] ||\n                    minutes === 1 && ['m'] ||\n                    minutes < relativeTimeThresholds.m && ['mm', minutes] ||\n                    hours === 1 && ['h'] ||\n                    hours < relativeTimeThresholds.h && ['hh', hours] ||\n                    days === 1 && ['d'] ||\n                    days < relativeTimeThresholds.d && ['dd', days] ||\n                    months === 1 && ['M'] ||\n                    months < relativeTimeThresholds.M && ['MM', months] ||\n                    years === 1 && ['y'] || ['yy', years];\n\n            args[2] = withoutSuffix;\n            args[3] = +posNegDuration > 0;\n            args[4] = locale;\n            return substituteTimeAgo.apply({}, args);\n        }\n\n\n        /************************************\n            Week of Year\n        ************************************/\n\n\n        // firstDayOfWeek       0 = sun, 6 = sat\n        //                      the day of the week that starts the week\n        //                      (usually sunday or monday)\n        // firstDayOfWeekOfYear 0 = sun, 6 = sat\n        //                      the first week is the week that contains the first\n        //                      of this day of the week\n        //                      (eg. ISO weeks use thursday (4))\n        function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n            var end = firstDayOfWeekOfYear - firstDayOfWeek,\n                daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n                adjustedMoment;\n\n\n            if (daysToDayOfWeek > end) {\n                daysToDayOfWeek -= 7;\n            }\n\n            if (daysToDayOfWeek < end - 7) {\n                daysToDayOfWeek += 7;\n            }\n\n            adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');\n            return {\n                week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n                year: adjustedMoment.year()\n            };\n        }\n\n        //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n        function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n            var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;\n\n            d = d === 0 ? 7 : d;\n            weekday = weekday != null ? weekday : firstDayOfWeek;\n            daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n            dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n            return {\n                year: dayOfYear > 0 ? year : year - 1,\n                dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n            };\n        }\n\n        /************************************\n            Top Level Functions\n        ************************************/\n\n        function makeMoment(config) {\n            var input = config._i,\n                format = config._f;\n\n            config._locale = config._locale || moment.localeData(config._l);\n\n            if (input === null || (format === undefined && input === '')) {\n                return moment.invalid({nullInput: true});\n            }\n\n            if (typeof input === 'string') {\n                config._i = input = config._locale.preparse(input);\n            }\n\n            if (moment.isMoment(input)) {\n                return new Moment(input, true);\n            } else if (format) {\n                if (isArray(format)) {\n                    makeDateFromStringAndArray(config);\n                } else {\n                    makeDateFromStringAndFormat(config);\n                }\n            } else {\n                makeDateFromInput(config);\n            }\n\n            return new Moment(config);\n        }\n\n        moment = function (input, format, locale, strict) {\n            var c;\n\n            if (typeof(locale) === 'boolean') {\n                strict = locale;\n                locale = undefined;\n            }\n            // object construction must be done this way.\n            // https://github.com/moment/moment/issues/1423\n            c = {};\n            c._isAMomentObject = true;\n            c._i = input;\n            c._f = format;\n            c._l = locale;\n            c._strict = strict;\n            c._isUTC = false;\n            c._pf = defaultParsingFlags();\n\n            return makeMoment(c);\n        };\n\n        moment.suppressDeprecationWarnings = false;\n\n        moment.createFromInputFallback = deprecate(\n            'moment construction falls back to js Date. This is ' +\n            'discouraged and will be removed in upcoming major ' +\n            'release. Please refer to ' +\n            'https://github.com/moment/moment/issues/1407 for more info.',\n            function (config) {\n                config._d = new Date(config._i);\n            }\n        );\n\n        // Pick a moment m from moments so that m[fn](other) is true for all\n        // other. This relies on the function fn to be transitive.\n        //\n        // moments should either be an array of moment objects or an array, whose\n        // first element is an array of moment objects.\n        function pickBy(fn, moments) {\n            var res, i;\n            if (moments.length === 1 && isArray(moments[0])) {\n                moments = moments[0];\n            }\n            if (!moments.length) {\n                return moment();\n            }\n            res = moments[0];\n            for (i = 1; i < moments.length; ++i) {\n                if (moments[i][fn](res)) {\n                    res = moments[i];\n                }\n            }\n            return res;\n        }\n\n        moment.min = function () {\n            var args = [].slice.call(arguments, 0);\n\n            return pickBy('isBefore', args);\n        };\n\n        moment.max = function () {\n            var args = [].slice.call(arguments, 0);\n\n            return pickBy('isAfter', args);\n        };\n\n        // creating with utc\n        moment.utc = function (input, format, locale, strict) {\n            var c;\n\n            if (typeof(locale) === 'boolean') {\n                strict = locale;\n                locale = undefined;\n            }\n            // object construction must be done this way.\n            // https://github.com/moment/moment/issues/1423\n            c = {};\n            c._isAMomentObject = true;\n            c._useUTC = true;\n            c._isUTC = true;\n            c._l = locale;\n            c._i = input;\n            c._f = format;\n            c._strict = strict;\n            c._pf = defaultParsingFlags();\n\n            return makeMoment(c).utc();\n        };\n\n        // creating with unix timestamp (in seconds)\n        moment.unix = function (input) {\n            return moment(input * 1000);\n        };\n\n        // duration\n        moment.duration = function (input, key) {\n            var duration = input,\n                // matching against regexp is expensive, do it on demand\n                match = null,\n                sign,\n                ret,\n                parseIso,\n                diffRes;\n\n            if (moment.isDuration(input)) {\n                duration = {\n                    ms: input._milliseconds,\n                    d: input._days,\n                    M: input._months\n                };\n            } else if (typeof input === 'number') {\n                duration = {};\n                if (key) {\n                    duration[key] = input;\n                } else {\n                    duration.milliseconds = input;\n                }\n            } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n                sign = (match[1] === '-') ? -1 : 1;\n                duration = {\n                    y: 0,\n                    d: toInt(match[DATE]) * sign,\n                    h: toInt(match[HOUR]) * sign,\n                    m: toInt(match[MINUTE]) * sign,\n                    s: toInt(match[SECOND]) * sign,\n                    ms: toInt(match[MILLISECOND]) * sign\n                };\n            } else if (!!(match = isoDurationRegex.exec(input))) {\n                sign = (match[1] === '-') ? -1 : 1;\n                parseIso = function (inp) {\n                    // We'd normally use ~~inp for this, but unfortunately it also\n                    // converts floats to ints.\n                    // inp may be undefined, so careful calling replace on it.\n                    var res = inp && parseFloat(inp.replace(',', '.'));\n                    // apply sign while we're at it\n                    return (isNaN(res) ? 0 : res) * sign;\n                };\n                duration = {\n                    y: parseIso(match[2]),\n                    M: parseIso(match[3]),\n                    d: parseIso(match[4]),\n                    h: parseIso(match[5]),\n                    m: parseIso(match[6]),\n                    s: parseIso(match[7]),\n                    w: parseIso(match[8])\n                };\n            } else if (typeof duration === 'object' &&\n                    ('from' in duration || 'to' in duration)) {\n                diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n\n                duration = {};\n                duration.ms = diffRes.milliseconds;\n                duration.M = diffRes.months;\n            }\n\n            ret = new Duration(duration);\n\n            if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {\n                ret._locale = input._locale;\n            }\n\n            return ret;\n        };\n\n        // version number\n        moment.version = VERSION;\n\n        // default format\n        moment.defaultFormat = isoFormat;\n\n        // constant that refers to the ISO standard\n        moment.ISO_8601 = function () {};\n\n        // Plugins that add properties should also add the key here (null value),\n        // so we can properly clone ourselves.\n        moment.momentProperties = momentProperties;\n\n        // This function will be called whenever a moment is mutated.\n        // It is intended to keep the offset in sync with the timezone.\n        moment.updateOffset = function () {};\n\n        // This function allows you to set a threshold for relative time strings\n        moment.relativeTimeThreshold = function (threshold, limit) {\n            if (relativeTimeThresholds[threshold] === undefined) {\n                return false;\n            }\n            if (limit === undefined) {\n                return relativeTimeThresholds[threshold];\n            }\n            relativeTimeThresholds[threshold] = limit;\n            return true;\n        };\n\n        moment.lang = deprecate(\n            'moment.lang is deprecated. Use moment.locale instead.',\n            function (key, value) {\n                return moment.locale(key, value);\n            }\n        );\n\n        // This function will load locale and then set the global locale.  If\n        // no arguments are passed in, it will simply return the current global\n        // locale key.\n        moment.locale = function (key, values) {\n            var data;\n            if (key) {\n                if (typeof(values) !== 'undefined') {\n                    data = moment.defineLocale(key, values);\n                }\n                else {\n                    data = moment.localeData(key);\n                }\n\n                if (data) {\n                    moment.duration._locale = moment._locale = data;\n                }\n            }\n\n            return moment._locale._abbr;\n        };\n\n        moment.defineLocale = function (name, values) {\n            if (values !== null) {\n                values.abbr = name;\n                if (!locales[name]) {\n                    locales[name] = new Locale();\n                }\n                locales[name].set(values);\n\n                // backwards compat for now: also set the locale\n                moment.locale(name);\n\n                return locales[name];\n            } else {\n                // useful for testing\n                delete locales[name];\n                return null;\n            }\n        };\n\n        moment.langData = deprecate(\n            'moment.langData is deprecated. Use moment.localeData instead.',\n            function (key) {\n                return moment.localeData(key);\n            }\n        );\n\n        // returns locale data\n        moment.localeData = function (key) {\n            var locale;\n\n            if (key && key._locale && key._locale._abbr) {\n                key = key._locale._abbr;\n            }\n\n            if (!key) {\n                return moment._locale;\n            }\n\n            if (!isArray(key)) {\n                //short-circuit everything else\n                locale = loadLocale(key);\n                if (locale) {\n                    return locale;\n                }\n                key = [key];\n            }\n\n            return chooseLocale(key);\n        };\n\n        // compare moment object\n        moment.isMoment = function (obj) {\n            return obj instanceof Moment ||\n                (obj != null && hasOwnProp(obj, '_isAMomentObject'));\n        };\n\n        // for typechecking Duration objects\n        moment.isDuration = function (obj) {\n            return obj instanceof Duration;\n        };\n\n        for (i = lists.length - 1; i >= 0; --i) {\n            makeList(lists[i]);\n        }\n\n        moment.normalizeUnits = function (units) {\n            return normalizeUnits(units);\n        };\n\n        moment.invalid = function (flags) {\n            var m = moment.utc(NaN);\n            if (flags != null) {\n                extend(m._pf, flags);\n            }\n            else {\n                m._pf.userInvalidated = true;\n            }\n\n            return m;\n        };\n\n        moment.parseZone = function () {\n            return moment.apply(null, arguments).parseZone();\n        };\n\n        moment.parseTwoDigitYear = function (input) {\n            return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n        };\n\n        /************************************\n            Moment Prototype\n        ************************************/\n\n\n        extend(moment.fn = Moment.prototype, {\n\n            clone : function () {\n                return moment(this);\n            },\n\n            valueOf : function () {\n                return +this._d + ((this._offset || 0) * 60000);\n            },\n\n            unix : function () {\n                return Math.floor(+this / 1000);\n            },\n\n            toString : function () {\n                return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n            },\n\n            toDate : function () {\n                return this._offset ? new Date(+this) : this._d;\n            },\n\n            toISOString : function () {\n                var m = moment(this).utc();\n                if (0 < m.year() && m.year() <= 9999) {\n                    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n                } else {\n                    return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n                }\n            },\n\n            toArray : function () {\n                var m = this;\n                return [\n                    m.year(),\n                    m.month(),\n                    m.date(),\n                    m.hours(),\n                    m.minutes(),\n                    m.seconds(),\n                    m.milliseconds()\n                ];\n            },\n\n            isValid : function () {\n                return isValid(this);\n            },\n\n            isDSTShifted : function () {\n                if (this._a) {\n                    return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n                }\n\n                return false;\n            },\n\n            parsingFlags : function () {\n                return extend({}, this._pf);\n            },\n\n            invalidAt: function () {\n                return this._pf.overflow;\n            },\n\n            utc : function (keepLocalTime) {\n                return this.zone(0, keepLocalTime);\n            },\n\n            local : function (keepLocalTime) {\n                if (this._isUTC) {\n                    this.zone(0, keepLocalTime);\n                    this._isUTC = false;\n\n                    if (keepLocalTime) {\n                        this.add(this._dateTzOffset(), 'm');\n                    }\n                }\n                return this;\n            },\n\n            format : function (inputString) {\n                var output = formatMoment(this, inputString || moment.defaultFormat);\n                return this.localeData().postformat(output);\n            },\n\n            add : createAdder(1, 'add'),\n\n            subtract : createAdder(-1, 'subtract'),\n\n            diff : function (input, units, asFloat) {\n                var that = makeAs(input, this),\n                    zoneDiff = (this.zone() - that.zone()) * 6e4,\n                    diff, output, daysAdjust;\n\n                units = normalizeUnits(units);\n\n                if (units === 'year' || units === 'month') {\n                    // average number of days in the months in the given dates\n                    diff = (this.daysInMonth() + that.daysInMonth()) * 432e5; // 24 * 60 * 60 * 1000 / 2\n                    // difference in months\n                    output = ((this.year() - that.year()) * 12) + (this.month() - that.month());\n                    // adjust by taking difference in days, average number of days\n                    // and dst in the given months.\n                    daysAdjust = (this - moment(this).startOf('month')) -\n                        (that - moment(that).startOf('month'));\n                    // same as above but with zones, to negate all dst\n                    daysAdjust -= ((this.zone() - moment(this).startOf('month').zone()) -\n                            (that.zone() - moment(that).startOf('month').zone())) * 6e4;\n                    output += daysAdjust / diff;\n                    if (units === 'year') {\n                        output = output / 12;\n                    }\n                } else {\n                    diff = (this - that);\n                    output = units === 'second' ? diff / 1e3 : // 1000\n                        units === 'minute' ? diff / 6e4 : // 1000 * 60\n                        units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60\n                        units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                        units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                        diff;\n                }\n                return asFloat ? output : absRound(output);\n            },\n\n            from : function (time, withoutSuffix) {\n                return moment.duration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n            },\n\n            fromNow : function (withoutSuffix) {\n                return this.from(moment(), withoutSuffix);\n            },\n\n            calendar : function (time) {\n                // We want to compare the start of today, vs this.\n                // Getting start-of-today depends on whether we're zone'd or not.\n                var now = time || moment(),\n                    sod = makeAs(now, this).startOf('day'),\n                    diff = this.diff(sod, 'days', true),\n                    format = diff < -6 ? 'sameElse' :\n                        diff < -1 ? 'lastWeek' :\n                        diff < 0 ? 'lastDay' :\n                        diff < 1 ? 'sameDay' :\n                        diff < 2 ? 'nextDay' :\n                        diff < 7 ? 'nextWeek' : 'sameElse';\n                return this.format(this.localeData().calendar(format, this));\n            },\n\n            isLeapYear : function () {\n                return isLeapYear(this.year());\n            },\n\n            isDST : function () {\n                return (this.zone() < this.clone().month(0).zone() ||\n                    this.zone() < this.clone().month(5).zone());\n            },\n\n            day : function (input) {\n                var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n                if (input != null) {\n                    input = parseWeekday(input, this.localeData());\n                    return this.add(input - day, 'd');\n                } else {\n                    return day;\n                }\n            },\n\n            month : makeAccessor('Month', true),\n\n            startOf : function (units) {\n                units = normalizeUnits(units);\n                // the following switch intentionally omits break keywords\n                // to utilize falling through the cases.\n                switch (units) {\n                case 'year':\n                    this.month(0);\n                    /* falls through */\n                case 'quarter':\n                case 'month':\n                    this.date(1);\n                    /* falls through */\n                case 'week':\n                case 'isoWeek':\n                case 'day':\n                    this.hours(0);\n                    /* falls through */\n                case 'hour':\n                    this.minutes(0);\n                    /* falls through */\n                case 'minute':\n                    this.seconds(0);\n                    /* falls through */\n                case 'second':\n                    this.milliseconds(0);\n                    /* falls through */\n                }\n\n                // weeks are a special case\n                if (units === 'week') {\n                    this.weekday(0);\n                } else if (units === 'isoWeek') {\n                    this.isoWeekday(1);\n                }\n\n                // quarters are also special\n                if (units === 'quarter') {\n                    this.month(Math.floor(this.month() / 3) * 3);\n                }\n\n                return this;\n            },\n\n            endOf: function (units) {\n                units = normalizeUnits(units);\n                return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n            },\n\n            isAfter: function (input, units) {\n                units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n                if (units === 'millisecond') {\n                    input = moment.isMoment(input) ? input : moment(input);\n                    return +this > +input;\n                } else {\n                    return +this.clone().startOf(units) > +moment(input).startOf(units);\n                }\n            },\n\n            isBefore: function (input, units) {\n                units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n                if (units === 'millisecond') {\n                    input = moment.isMoment(input) ? input : moment(input);\n                    return +this < +input;\n                } else {\n                    return +this.clone().startOf(units) < +moment(input).startOf(units);\n                }\n            },\n\n            isSame: function (input, units) {\n                units = normalizeUnits(units || 'millisecond');\n                if (units === 'millisecond') {\n                    input = moment.isMoment(input) ? input : moment(input);\n                    return +this === +input;\n                } else {\n                    return +this.clone().startOf(units) === +makeAs(input, this).startOf(units);\n                }\n            },\n\n            min: deprecate(\n                     'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n                     function (other) {\n                         other = moment.apply(null, arguments);\n                         return other < this ? this : other;\n                     }\n             ),\n\n            max: deprecate(\n                    'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n                    function (other) {\n                        other = moment.apply(null, arguments);\n                        return other > this ? this : other;\n                    }\n            ),\n\n            // keepLocalTime = true means only change the timezone, without\n            // affecting the local hour. So 5:31:26 +0300 --[zone(2, true)]-->\n            // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist int zone\n            // +0200, so we adjust the time as needed, to be valid.\n            //\n            // Keeping the time actually adds/subtracts (one hour)\n            // from the actual represented time. That is why we call updateOffset\n            // a second time. In case it wants us to change the offset again\n            // _changeInProgress == true case, then we have to adjust, because\n            // there is no such time in the given timezone.\n            zone : function (input, keepLocalTime) {\n                var offset = this._offset || 0,\n                    localAdjust;\n                if (input != null) {\n                    if (typeof input === 'string') {\n                        input = timezoneMinutesFromString(input);\n                    }\n                    if (Math.abs(input) < 16) {\n                        input = input * 60;\n                    }\n                    if (!this._isUTC && keepLocalTime) {\n                        localAdjust = this._dateTzOffset();\n                    }\n                    this._offset = input;\n                    this._isUTC = true;\n                    if (localAdjust != null) {\n                        this.subtract(localAdjust, 'm');\n                    }\n                    if (offset !== input) {\n                        if (!keepLocalTime || this._changeInProgress) {\n                            addOrSubtractDurationFromMoment(this,\n                                    moment.duration(offset - input, 'm'), 1, false);\n                        } else if (!this._changeInProgress) {\n                            this._changeInProgress = true;\n                            moment.updateOffset(this, true);\n                            this._changeInProgress = null;\n                        }\n                    }\n                } else {\n                    return this._isUTC ? offset : this._dateTzOffset();\n                }\n                return this;\n            },\n\n            zoneAbbr : function () {\n                return this._isUTC ? 'UTC' : '';\n            },\n\n            zoneName : function () {\n                return this._isUTC ? 'Coordinated Universal Time' : '';\n            },\n\n            parseZone : function () {\n                if (this._tzm) {\n                    this.zone(this._tzm);\n                } else if (typeof this._i === 'string') {\n                    this.zone(this._i);\n                }\n                return this;\n            },\n\n            hasAlignedHourOffset : function (input) {\n                if (!input) {\n                    input = 0;\n                }\n                else {\n                    input = moment(input).zone();\n                }\n\n                return (this.zone() - input) % 60 === 0;\n            },\n\n            daysInMonth : function () {\n                return daysInMonth(this.year(), this.month());\n            },\n\n            dayOfYear : function (input) {\n                var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;\n                return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n            },\n\n            quarter : function (input) {\n                return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n            },\n\n            weekYear : function (input) {\n                var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n                return input == null ? year : this.add((input - year), 'y');\n            },\n\n            isoWeekYear : function (input) {\n                var year = weekOfYear(this, 1, 4).year;\n                return input == null ? year : this.add((input - year), 'y');\n            },\n\n            week : function (input) {\n                var week = this.localeData().week(this);\n                return input == null ? week : this.add((input - week) * 7, 'd');\n            },\n\n            isoWeek : function (input) {\n                var week = weekOfYear(this, 1, 4).week;\n                return input == null ? week : this.add((input - week) * 7, 'd');\n            },\n\n            weekday : function (input) {\n                var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n                return input == null ? weekday : this.add(input - weekday, 'd');\n            },\n\n            isoWeekday : function (input) {\n                // behaves the same as moment#day except\n                // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n                // as a setter, sunday should belong to the previous week.\n                return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n            },\n\n            isoWeeksInYear : function () {\n                return weeksInYear(this.year(), 1, 4);\n            },\n\n            weeksInYear : function () {\n                var weekInfo = this.localeData()._week;\n                return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n            },\n\n            get : function (units) {\n                units = normalizeUnits(units);\n                return this[units]();\n            },\n\n            set : function (units, value) {\n                units = normalizeUnits(units);\n                if (typeof this[units] === 'function') {\n                    this[units](value);\n                }\n                return this;\n            },\n\n            // If passed a locale key, it will set the locale for this\n            // instance.  Otherwise, it will return the locale configuration\n            // variables for this instance.\n            locale : function (key) {\n                var newLocaleData;\n\n                if (key === undefined) {\n                    return this._locale._abbr;\n                } else {\n                    newLocaleData = moment.localeData(key);\n                    if (newLocaleData != null) {\n                        this._locale = newLocaleData;\n                    }\n                    return this;\n                }\n            },\n\n            lang : deprecate(\n                'moment().lang() is deprecated. Use moment().localeData() instead.',\n                function (key) {\n                    if (key === undefined) {\n                        return this.localeData();\n                    } else {\n                        return this.locale(key);\n                    }\n                }\n            ),\n\n            localeData : function () {\n                return this._locale;\n            },\n\n            _dateTzOffset : function () {\n                // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n                // https://github.com/moment/moment/pull/1871\n                return Math.round(this._d.getTimezoneOffset() / 15) * 15;\n            }\n        });\n\n        function rawMonthSetter(mom, value) {\n            var dayOfMonth;\n\n            // TODO: Move this out of here!\n            if (typeof value === 'string') {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (typeof value !== 'number') {\n                    return mom;\n                }\n            }\n\n            dayOfMonth = Math.min(mom.date(),\n                    daysInMonth(mom.year(), value));\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n            return mom;\n        }\n\n        function rawGetter(mom, unit) {\n            return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n        }\n\n        function rawSetter(mom, unit, value) {\n            if (unit === 'Month') {\n                return rawMonthSetter(mom, value);\n            } else {\n                return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n\n        function makeAccessor(unit, keepTime) {\n            return function (value) {\n                if (value != null) {\n                    rawSetter(this, unit, value);\n                    moment.updateOffset(this, keepTime);\n                    return this;\n                } else {\n                    return rawGetter(this, unit);\n                }\n            };\n        }\n\n        moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);\n        moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);\n        moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour he wants. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);\n        // moment.fn.month is defined separately\n        moment.fn.date = makeAccessor('Date', true);\n        moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));\n        moment.fn.year = makeAccessor('FullYear', true);\n        moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));\n\n        // add plural methods\n        moment.fn.days = moment.fn.day;\n        moment.fn.months = moment.fn.month;\n        moment.fn.weeks = moment.fn.week;\n        moment.fn.isoWeeks = moment.fn.isoWeek;\n        moment.fn.quarters = moment.fn.quarter;\n\n        // add aliased format methods\n        moment.fn.toJSON = moment.fn.toISOString;\n\n        /************************************\n            Duration Prototype\n        ************************************/\n\n\n        function daysToYears (days) {\n            // 400 years have 146097 days (taking into account leap year rules)\n            return days * 400 / 146097;\n        }\n\n        function yearsToDays (years) {\n            // years * 365 + absRound(years / 4) -\n            //     absRound(years / 100) + absRound(years / 400);\n            return years * 146097 / 400;\n        }\n\n        extend(moment.duration.fn = Duration.prototype, {\n\n            _bubble : function () {\n                var milliseconds = this._milliseconds,\n                    days = this._days,\n                    months = this._months,\n                    data = this._data,\n                    seconds, minutes, hours, years = 0;\n\n                // The following code bubbles up values, see the tests for\n                // examples of what that means.\n                data.milliseconds = milliseconds % 1000;\n\n                seconds = absRound(milliseconds / 1000);\n                data.seconds = seconds % 60;\n\n                minutes = absRound(seconds / 60);\n                data.minutes = minutes % 60;\n\n                hours = absRound(minutes / 60);\n                data.hours = hours % 24;\n\n                days += absRound(hours / 24);\n\n                // Accurately convert days to years, assume start from year 0.\n                years = absRound(daysToYears(days));\n                days -= absRound(yearsToDays(years));\n\n                // 30 days to a month\n                // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n                months += absRound(days / 30);\n                days %= 30;\n\n                // 12 months -> 1 year\n                years += absRound(months / 12);\n                months %= 12;\n\n                data.days = days;\n                data.months = months;\n                data.years = years;\n            },\n\n            abs : function () {\n                this._milliseconds = Math.abs(this._milliseconds);\n                this._days = Math.abs(this._days);\n                this._months = Math.abs(this._months);\n\n                this._data.milliseconds = Math.abs(this._data.milliseconds);\n                this._data.seconds = Math.abs(this._data.seconds);\n                this._data.minutes = Math.abs(this._data.minutes);\n                this._data.hours = Math.abs(this._data.hours);\n                this._data.months = Math.abs(this._data.months);\n                this._data.years = Math.abs(this._data.years);\n\n                return this;\n            },\n\n            weeks : function () {\n                return absRound(this.days() / 7);\n            },\n\n            valueOf : function () {\n                return this._milliseconds +\n                  this._days * 864e5 +\n                  (this._months % 12) * 2592e6 +\n                  toInt(this._months / 12) * 31536e6;\n            },\n\n            humanize : function (withSuffix) {\n                var output = relativeTime(this, !withSuffix, this.localeData());\n\n                if (withSuffix) {\n                    output = this.localeData().pastFuture(+this, output);\n                }\n\n                return this.localeData().postformat(output);\n            },\n\n            add : function (input, val) {\n                // supports only 2.0-style add(1, 's') or add(moment)\n                var dur = moment.duration(input, val);\n\n                this._milliseconds += dur._milliseconds;\n                this._days += dur._days;\n                this._months += dur._months;\n\n                this._bubble();\n\n                return this;\n            },\n\n            subtract : function (input, val) {\n                var dur = moment.duration(input, val);\n\n                this._milliseconds -= dur._milliseconds;\n                this._days -= dur._days;\n                this._months -= dur._months;\n\n                this._bubble();\n\n                return this;\n            },\n\n            get : function (units) {\n                units = normalizeUnits(units);\n                return this[units.toLowerCase() + 's']();\n            },\n\n            as : function (units) {\n                var days, months;\n                units = normalizeUnits(units);\n\n                if (units === 'month' || units === 'year') {\n                    days = this._days + this._milliseconds / 864e5;\n                    months = this._months + daysToYears(days) * 12;\n                    return units === 'month' ? months : months / 12;\n                } else {\n                    // handle milliseconds separately because of floating point math errors (issue #1867)\n                    days = this._days + yearsToDays(this._months / 12);\n                    switch (units) {\n                        case 'week': return days / 7 + this._milliseconds / 6048e5;\n                        case 'day': return days + this._milliseconds / 864e5;\n                        case 'hour': return days * 24 + this._milliseconds / 36e5;\n                        case 'minute': return days * 24 * 60 + this._milliseconds / 6e4;\n                        case 'second': return days * 24 * 60 * 60 + this._milliseconds / 1000;\n                        // Math.floor prevents floating point math errors here\n                        case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;\n                        default: throw new Error('Unknown unit ' + units);\n                    }\n                }\n            },\n\n            lang : moment.fn.lang,\n            locale : moment.fn.locale,\n\n            toIsoString : deprecate(\n                'toIsoString() is deprecated. Please use toISOString() instead ' +\n                '(notice the capitals)',\n                function () {\n                    return this.toISOString();\n                }\n            ),\n\n            toISOString : function () {\n                // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n                var years = Math.abs(this.years()),\n                    months = Math.abs(this.months()),\n                    days = Math.abs(this.days()),\n                    hours = Math.abs(this.hours()),\n                    minutes = Math.abs(this.minutes()),\n                    seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\n                if (!this.asSeconds()) {\n                    // this is the same as C#'s (Noda) and python (isodate)...\n                    // but not other JS (goog.date)\n                    return 'P0D';\n                }\n\n                return (this.asSeconds() < 0 ? '-' : '') +\n                    'P' +\n                    (years ? years + 'Y' : '') +\n                    (months ? months + 'M' : '') +\n                    (days ? days + 'D' : '') +\n                    ((hours || minutes || seconds) ? 'T' : '') +\n                    (hours ? hours + 'H' : '') +\n                    (minutes ? minutes + 'M' : '') +\n                    (seconds ? seconds + 'S' : '');\n            },\n\n            localeData : function () {\n                return this._locale;\n            }\n        });\n\n        moment.duration.fn.toString = moment.duration.fn.toISOString;\n\n        function makeDurationGetter(name) {\n            moment.duration.fn[name] = function () {\n                return this._data[name];\n            };\n        }\n\n        for (i in unitMillisecondFactors) {\n            if (hasOwnProp(unitMillisecondFactors, i)) {\n                makeDurationGetter(i.toLowerCase());\n            }\n        }\n\n        moment.duration.fn.asMilliseconds = function () {\n            return this.as('ms');\n        };\n        moment.duration.fn.asSeconds = function () {\n            return this.as('s');\n        };\n        moment.duration.fn.asMinutes = function () {\n            return this.as('m');\n        };\n        moment.duration.fn.asHours = function () {\n            return this.as('h');\n        };\n        moment.duration.fn.asDays = function () {\n            return this.as('d');\n        };\n        moment.duration.fn.asWeeks = function () {\n            return this.as('weeks');\n        };\n        moment.duration.fn.asMonths = function () {\n            return this.as('M');\n        };\n        moment.duration.fn.asYears = function () {\n            return this.as('y');\n        };\n\n        /************************************\n            Default Locale\n        ************************************/\n\n\n        // Set default locale, other locale will inherit from English.\n        moment.locale('en', {\n            ordinal : function (number) {\n                var b = number % 10,\n                    output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                    (b === 1) ? 'st' :\n                    (b === 2) ? 'nd' :\n                    (b === 3) ? 'rd' : 'th';\n                return number + output;\n            }\n        });\n\n        return moment;\n\n    }).call(this);\n\n    UI.Utils.moment = moment;\n\n    return UI.datepicker;\n});\n"],"sourceRoot":"/source/"}