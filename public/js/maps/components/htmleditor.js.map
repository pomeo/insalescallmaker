{"version":3,"sources":["components/htmleditor.js"],"names":["addon","component","window","UIkit","define","amd","UI","editors","defaults","iframe","mode","markdown","autocomplete","height","maxsplitsize","markedOptions","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","langPrefix","codemirror","lineWrapping","dragDrop","autoCloseTags","matchTags","autoCloseBrackets","matchBrackets","indentUnit","indentWithTabs","tabSize","hintOptions","completionSingle","toolbar","lblPreview","lblCodeview","lblMarkedview","boot","ready","context","$","each","obj","editor","this","data","htmleditor","Utils","options","attr","init","$this","tpl","components","template","CodeMirror","buttons","replace","content","find","preview","children","eq","code","element","before","appendTo","fromTextArea","on","debounce","render","save","css","append","contentWindow","document","open","close","container","parent","$win","fit","previewContainer","codeContent","codeScroll","codeHeight","previewHeight","scrollHeight","ratio","previewPostition","scrollTop","e","preventDefault","removeClass","filter","addClass","activetab","hasClass","refresh","is","trigger","showHint","hint","html","doc","getDoc","POS","getCursor","innerMode","getMode","getTokenAt","state","name","cur","token","string","charAt","type","completeSingle","debouncedRedraw","redraw","bind","push","addButton","button","addButtons","extend","replaceInPreview","regexp","callback","translateOffset","offset","result","getValue","substring","split","line","length","ch","results","value","currentvalue","indexOf","arguments","match","matches","from","to","replaceRange","inRange","cursor","_buildtoolbar","bar","empty","forEach","title","label","join","width","getOption","getCursorMode","param","val","addShortcut","map","isArray","key","addKeyMap","addShortcutAction","action","shortcuts","replaceSelection","text","getSelection","curLine","getLine","start","end","test","curWord","slice","setSelection","focus","replaceLine","pos","setCursor","plugin","addAction","fullscreen","bold","italic","strike","blockquote","link","image","listUl","listOl","listfn","cm","posend","i","toggleClass","wrap","getWrapperElement","fullScreenRestore","pageYOffset","scrollLeft","pageXOffset","style","documentElement","overflow","info","scrollTo","setTimeout","enableMarkdown","setOption","parser","marked","setOptions","prefix","prevline","Number","base","htmlState","disableMarkdown"],"mappings":"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","file":"components/htmleditor.js","sourcesContent":["/*! UIkit 2.17.0 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */\n(function(addon) {\n\n    var component;\n\n    if (window.UIkit) {\n        component = addon(UIkit);\n    }\n\n    if (typeof define == \"function\" && define.amd) {\n        define(\"uikit-htmleditor\", [\"uikit\"], function(){\n            return component || addon(UIkit);\n        });\n    }\n\n})(function(UI) {\n\n    \"use strict\";\n\n    var editors = [];\n\n    UI.component('htmleditor', {\n\n        defaults: {\n            iframe       : false,\n            mode         : 'split',\n            markdown     : false,\n            autocomplete : true,\n            height       : 500,\n            maxsplitsize : 1000,\n            markedOptions: { gfm: true, tables: true, breaks: true, pedantic: true, sanitize: false, smartLists: true, smartypants: false, langPrefix: 'lang-'},\n            codemirror   : { mode: 'htmlmixed', lineWrapping: true, dragDrop: false, autoCloseTags: true, matchTags: true, autoCloseBrackets: true, matchBrackets: true, indentUnit: 4, indentWithTabs: false, tabSize: 4, hintOptions: {completionSingle:false} },\n            toolbar      : [ 'bold', 'italic', 'strike', 'link', 'image', 'blockquote', 'listUl', 'listOl' ],\n            lblPreview   : 'Preview',\n            lblCodeview  : 'HTML',\n            lblMarkedview: 'Markdown'\n        },\n\n        boot: function() {\n\n            // init code\n            UI.ready(function(context) {\n\n                UI.$('textarea[data-uk-htmleditor]', context).each(function() {\n\n                    var editor = UI.$(this), obj;\n\n                    if (!editor.data('htmleditor')) {\n                        obj = UI.htmleditor(editor, UI.Utils.options(editor.attr('data-uk-htmleditor')));\n                    }\n                });\n            });\n        },\n\n        init: function() {\n\n            var $this = this, tpl = UI.components.htmleditor.template;\n\n            this.CodeMirror = this.options.CodeMirror || CodeMirror;\n            this.buttons    = {};\n\n            tpl = tpl.replace(/\\{:lblPreview\\}/g, this.options.lblPreview);\n            tpl = tpl.replace(/\\{:lblCodeview\\}/g, this.options.lblCodeview);\n\n            this.htmleditor = UI.$(tpl);\n            this.content    = this.htmleditor.find('.uk-htmleditor-content');\n            this.toolbar    = this.htmleditor.find('.uk-htmleditor-toolbar');\n            this.preview    = this.htmleditor.find('.uk-htmleditor-preview').children().eq(0);\n            this.code       = this.htmleditor.find('.uk-htmleditor-code');\n\n            this.element.before(this.htmleditor).appendTo(this.code);\n            this.editor = this.CodeMirror.fromTextArea(this.element[0], this.options.codemirror);\n            this.editor.htmleditor = this;\n            this.editor.on('change', UI.Utils.debounce(function() { $this.render(); }, 150));\n            this.editor.on('change', function() { $this.editor.save(); });\n            this.code.find('.CodeMirror').css('height', this.options.height);\n\n            // iframe mode?\n            if (this.options.iframe) {\n\n                this.iframe = UI.$('<iframe class=\"uk-htmleditor-iframe\" frameborder=\"0\" scrolling=\"auto\" height=\"100\" width=\"100%\"></iframe>');\n                this.preview.append(this.iframe);\n\n                // must open and close document object to start using it!\n                this.iframe[0].contentWindow.document.open();\n                this.iframe[0].contentWindow.document.close();\n\n                this.preview.container = UI.$(this.iframe[0].contentWindow.document).find('body');\n\n                // append custom stylesheet\n                if (typeof(this.options.iframe) === 'string') {\n                   this.preview.container.parent().append('<link rel=\"stylesheet\" href=\"'+this.options.iframe+'\">');\n                }\n\n            } else {\n                this.preview.container = this.preview;\n            }\n\n            UI.$win.on('resize', UI.Utils.debounce(function() { $this.fit(); }, 200));\n\n            var previewContainer = this.iframe ? this.preview.container:$this.preview.parent(),\n                codeContent      = this.code.find('.CodeMirror-sizer'),\n                codeScroll       = this.code.find('.CodeMirror-scroll').on('scroll', UI.Utils.debounce(function() {\n\n                    if ($this.htmleditor.attr('data-mode') == 'tab') return;\n\n                    // calc position\n                    var codeHeight       = codeContent.height() - codeScroll.height(),\n                        previewHeight    = previewContainer[0].scrollHeight - ($this.iframe ? $this.iframe.height() : previewContainer.height()),\n                        ratio            = previewHeight / codeHeight,\n                        previewPostition = codeScroll.scrollTop() * ratio;\n\n                    // apply new scroll\n                    previewContainer.scrollTop(previewPostition);\n\n                }, 10));\n\n            this.htmleditor.on('click', '.uk-htmleditor-button-code, .uk-htmleditor-button-preview', function(e) {\n\n                e.preventDefault();\n\n                if ($this.htmleditor.attr('data-mode') == 'tab') {\n\n                    $this.htmleditor.find('.uk-htmleditor-button-code, .uk-htmleditor-button-preview').removeClass('uk-active').filter(this).addClass('uk-active');\n\n                    $this.activetab = UI.$(this).hasClass('uk-htmleditor-button-code') ? 'code' : 'preview';\n                    $this.htmleditor.attr('data-active-tab', $this.activetab);\n                    $this.editor.refresh();\n                }\n            });\n\n            // toolbar actions\n            this.htmleditor.on('click', 'a[data-htmleditor-button]', function() {\n\n                if (!$this.code.is(':visible')) return;\n\n                $this.trigger('action.' + UI.$(this).data('htmleditor-button'), [$this.editor]);\n            });\n\n            this.preview.parent().css('height', this.code.height());\n\n            // autocomplete\n            if (this.options.autocomplete && this.CodeMirror.showHint && this.CodeMirror.hint && this.CodeMirror.hint.html) {\n\n                this.editor.on('inputRead', UI.Utils.debounce(function() {\n                    var doc = $this.editor.getDoc(), POS = doc.getCursor(), mode = $this.CodeMirror.innerMode($this.editor.getMode(), $this.editor.getTokenAt(POS).state).mode.name;\n\n                    if (mode == 'xml') { //html depends on xml\n\n                        var cur = $this.editor.getCursor(), token = $this.editor.getTokenAt(cur);\n\n                        if (token.string.charAt(0) == '<' || token.type == 'attribute') {\n                            $this.CodeMirror.showHint($this.editor, $this.CodeMirror.hint.html, { completeSingle: false });\n                        }\n                    }\n                }, 100));\n            }\n\n            this.debouncedRedraw = UI.Utils.debounce(function () { $this.redraw(); }, 5);\n\n            this.on('init.uk.component', function() {\n                $this.redraw();\n            });\n\n            this.element.attr('data-uk-check-display', 1).on('display.uk.check', function(e) {\n                if (this.htmleditor.is(\":visible\")) this.fit();\n            }.bind(this));\n\n            editors.push(this);\n        },\n\n        addButton: function(name, button) {\n            this.buttons[name] = button;\n        },\n\n        addButtons: function(buttons) {\n            UI.$.extend(this.buttons, buttons);\n        },\n\n        replaceInPreview: function(regexp, callback) {\n\n            var editor = this.editor, results = [], value = editor.getValue(), offset = -1;\n\n            this.currentvalue = this.currentvalue.replace(regexp, function() {\n\n                offset = value.indexOf(arguments[0], ++offset);\n\n                var match  = {\n                    matches: arguments,\n                    from   : translateOffset(offset),\n                    to     : translateOffset(offset + arguments[0].length),\n                    replace: function(value) {\n                        editor.replaceRange(value, match.from, match.to);\n                    },\n                    inRange: function(cursor) {\n\n                        if (cursor.line === match.from.line && cursor.line === match.to.line) {\n                            return cursor.ch >= match.from.ch && cursor.ch < match.to.ch;\n                        }\n\n                        return  (cursor.line === match.from.line && cursor.ch   >= match.from.ch) ||\n                                (cursor.line >   match.from.line && cursor.line <  match.to.line) ||\n                                (cursor.line === match.to.line   && cursor.ch   <  match.to.ch);\n                    }\n                };\n\n                var result = callback(match);\n\n                if (!result) {\n                    return arguments[0];\n                }\n\n                results.push(match);\n                return result;\n            });\n\n            function translateOffset(offset) {\n                var result = editor.getValue().substring(0, offset).split('\\n');\n                return { line: result.length - 1, ch: result[result.length - 1].length }\n            }\n\n            return results;\n        },\n\n        _buildtoolbar: function() {\n\n            if (!(this.options.toolbar && this.options.toolbar.length)) return;\n\n            var $this = this, bar = [];\n\n            this.toolbar.empty();\n\n            this.options.toolbar.forEach(function(button) {\n                if (!$this.buttons[button]) return;\n\n                var title = $this.buttons[button].title ? $this.buttons[button].title : button;\n\n                bar.push('<li><a data-htmleditor-button=\"'+button+'\" title=\"'+title+'\" data-uk-tooltip>'+$this.buttons[button].label+'</a></li>');\n            });\n\n            this.toolbar.html(bar.join('\\n'));\n        },\n\n        fit: function() {\n\n            var mode = this.options.mode;\n\n            if (mode == 'split' && this.htmleditor.width() < this.options.maxsplitsize) {\n                mode = 'tab';\n            }\n\n            if (mode == 'tab') {\n                if (!this.activetab) {\n                    this.activetab = 'code';\n                    this.htmleditor.attr('data-active-tab', this.activetab);\n                }\n\n                this.htmleditor.find('.uk-htmleditor-button-code, .uk-htmleditor-button-preview').removeClass('uk-active')\n                    .filter(this.activetab == 'code' ? '.uk-htmleditor-button-code' : '.uk-htmleditor-button-preview')\n                    .addClass('uk-active');\n            }\n\n            this.editor.refresh();\n            this.preview.parent().css('height', this.code.height());\n\n            this.htmleditor.attr('data-mode', mode);\n        },\n\n        redraw: function() {\n            this._buildtoolbar();\n            this.render();\n            this.fit();\n        },\n\n        getMode: function() {\n            return this.editor.getOption('mode');\n        },\n\n        getCursorMode: function() {\n            var param = { mode: 'html'};\n            this.trigger('cursorMode', [param]);\n            return param.mode;\n        },\n\n        render: function() {\n\n            this.currentvalue = this.editor.getValue();\n\n            // empty code\n            if (!this.currentvalue) {\n\n                this.element.val('');\n                this.preview.container.html('');\n\n                return;\n            }\n\n            this.trigger('render', [this]);\n            this.trigger('renderLate', [this]);\n\n            this.preview.container.html(this.currentvalue);\n        },\n\n        addShortcut: function(name, callback) {\n            var map = {};\n            if (!UI.$.isArray(name)) {\n                name = [name];\n            }\n\n            name.forEach(function(key) {\n                map[key] = callback;\n            });\n\n            this.editor.addKeyMap(map);\n\n            return map;\n        },\n\n        addShortcutAction: function(action, shortcuts) {\n            var editor = this;\n            this.addShortcut(shortcuts, function() {\n                editor.element.trigger('action.' + action, [editor.editor]);\n            });\n        },\n\n        replaceSelection: function(replace) {\n\n            var text = this.editor.getSelection();\n\n            if (!text.length) {\n\n                var cur     = this.editor.getCursor(),\n                    curLine = this.editor.getLine(cur.line),\n                    start   = cur.ch,\n                    end     = start;\n\n                while (end < curLine.length && /[\\w$]+/.test(curLine.charAt(end))) ++end;\n                while (start && /[\\w$]+/.test(curLine.charAt(start - 1))) --start;\n\n                var curWord = start != end && curLine.slice(start, end);\n\n                if (curWord) {\n                    this.editor.setSelection({ line: cur.line, ch: start}, { line: cur.line, ch: end });\n                    text = curWord;\n                }\n            }\n\n            var html = replace.replace('$1', text);\n\n            this.editor.replaceSelection(html, 'end');\n            this.editor.focus();\n        },\n\n        replaceLine: function(replace) {\n            var pos  = this.editor.getDoc().getCursor(),\n                text = this.editor.getLine(pos.line),\n                html = replace.replace('$1', text);\n\n            this.editor.replaceRange(html , { line: pos.line, ch: 0 }, { line: pos.line, ch: text.length });\n            this.editor.setCursor({ line: pos.line, ch: html.length });\n            this.editor.focus();\n        },\n\n        save: function() {\n            this.editor.save();\n        }\n    });\n\n\n    UI.components.htmleditor.template = [\n        '<div class=\"uk-htmleditor uk-clearfix\" data-mode=\"split\">',\n            '<div class=\"uk-htmleditor-navbar\">',\n                '<ul class=\"uk-htmleditor-navbar-nav uk-htmleditor-toolbar\"></ul>',\n                '<div class=\"uk-htmleditor-navbar-flip\">',\n                    '<ul class=\"uk-htmleditor-navbar-nav\">',\n                        '<li class=\"uk-htmleditor-button-code\"><a>{:lblCodeview}</a></li>',\n                        '<li class=\"uk-htmleditor-button-preview\"><a>{:lblPreview}</a></li>',\n                        '<li><a data-htmleditor-button=\"fullscreen\"><i class=\"uk-icon-expand\"></i></a></li>',\n                    '</ul>',\n                '</div>',\n            '</div>',\n            '<div class=\"uk-htmleditor-content\">',\n                '<div class=\"uk-htmleditor-code\"></div>',\n                '<div class=\"uk-htmleditor-preview\"><div></div></div>',\n            '</div>',\n        '</div>'\n    ].join('');\n\n\n    UI.plugin('htmleditor', 'base', {\n\n        init: function(editor) {\n\n            editor.addButtons({\n\n                fullscreen: {\n                    title  : 'Fullscreen',\n                    label  : '<i class=\"uk-icon-expand\"></i>'\n                },\n                bold : {\n                    title  : 'Bold',\n                    label  : '<i class=\"uk-icon-bold\"></i>'\n                },\n                italic : {\n                    title  : 'Italic',\n                    label  : '<i class=\"uk-icon-italic\"></i>'\n                },\n                strike : {\n                    title  : 'Strikethrough',\n                    label  : '<i class=\"uk-icon-strikethrough\"></i>'\n                },\n                blockquote : {\n                    title  : 'Blockquote',\n                    label  : '<i class=\"uk-icon-quote-right\"></i>'\n                },\n                link : {\n                    title  : 'Link',\n                    label  : '<i class=\"uk-icon-link\"></i>'\n                },\n                image : {\n                    title  : 'Image',\n                    label  : '<i class=\"uk-icon-picture-o\"></i>'\n                },\n                listUl : {\n                    title  : 'Unordered List',\n                    label  : '<i class=\"uk-icon-list-ul\"></i>'\n                },\n                listOl : {\n                    title  : 'Ordered List',\n                    label  : '<i class=\"uk-icon-list-ol\"></i>'\n                }\n\n            });\n\n            addAction('bold', '<strong>$1</strong>');\n            addAction('italic', '<em>$1</em>');\n            addAction('strike', '<del>$1</del>');\n            addAction('blockquote', '<blockquote><p>$1</p></blockquote>', 'replaceLine');\n            addAction('link', '<a href=\"http://\">$1</a>');\n            addAction('image', '<img src=\"http://\" alt=\"$1\">');\n\n            var listfn = function() {\n                if (editor.getCursorMode() == 'html') {\n\n                    var cm      = editor.editor,\n                        pos     = cm.getDoc().getCursor(true),\n                        posend  = cm.getDoc().getCursor(false);\n\n                    for (var i=pos.line; i<(posend.line+1);i++) {\n                        cm.replaceRange('<li>'+cm.getLine(i)+'</li>', { line: i, ch: 0 }, { line: i, ch: cm.getLine(i).length });\n                    }\n\n                    cm.setCursor({ line: posend.line, ch: cm.getLine(posend.line).length });\n                    cm.focus();\n                }\n            }\n\n            editor.on('action.listUl', function() {\n                listfn();\n            });\n\n            editor.on('action.listOl', function() {\n                listfn();\n            });\n\n            editor.htmleditor.on('click', 'a[data-htmleditor-button=\"fullscreen\"]', function() {\n                editor.htmleditor.toggleClass('uk-htmleditor-fullscreen');\n\n                var wrap = editor.editor.getWrapperElement();\n\n                if (editor.htmleditor.hasClass('uk-htmleditor-fullscreen')) {\n\n                    editor.editor.state.fullScreenRestore = {scrollTop: window.pageYOffset, scrollLeft: window.pageXOffset, width: wrap.style.width, height: wrap.style.height};\n                    wrap.style.width  = '';\n                    wrap.style.height = editor.content.height()+'px';\n                    document.documentElement.style.overflow = 'hidden';\n\n                } else {\n\n                    document.documentElement.style.overflow = '';\n                    var info = editor.editor.state.fullScreenRestore;\n                    wrap.style.width = info.width; wrap.style.height = info.height;\n                    window.scrollTo(info.scrollLeft, info.scrollTop);\n                }\n\n                setTimeout(function() {\n                    editor.fit();\n                    UI.$win.trigger('resize');\n                }, 50);\n            });\n\n            editor.addShortcut(['Ctrl-S', 'Cmd-S'], function() { editor.element.trigger('htmleditor-save', [editor]); });\n            editor.addShortcutAction('bold', ['Ctrl-B', 'Cmd-B']);\n\n            function addAction(name, replace, mode) {\n                editor.on('action.'+name, function() {\n                    if (editor.getCursorMode() == 'html') {\n                        editor[mode == 'replaceLine' ? 'replaceLine' : 'replaceSelection'](replace);\n                    }\n                });\n            }\n        }\n    });\n\n    UI.plugin('htmleditor', 'markdown', {\n\n        init: function(editor) {\n\n            var parser = editor.options.marked || marked;\n\n            if (!parser) return;\n\n            parser.setOptions(editor.options.markedOptions);\n\n            if (editor.options.markdown) {\n                enableMarkdown()\n            }\n\n            addAction('bold', '**$1**');\n            addAction('italic', '*$1*');\n            addAction('strike', '~~$1~~');\n            addAction('blockquote', '> $1', 'replaceLine');\n            addAction('link', '[$1](http://)');\n            addAction('image', '![$1](http://)');\n\n            editor.on('action.listUl', function() {\n\n                if (editor.getCursorMode() == 'markdown') {\n\n                    var cm      = editor.editor,\n                        pos     = cm.getDoc().getCursor(true),\n                        posend  = cm.getDoc().getCursor(false);\n\n                    for (var i=pos.line; i<(posend.line+1);i++) {\n                        cm.replaceRange('* '+cm.getLine(i), { line: i, ch: 0 }, { line: i, ch: cm.getLine(i).length });\n                    }\n\n                    cm.setCursor({ line: posend.line, ch: cm.getLine(posend.line).length });\n                    cm.focus();\n                }\n            });\n\n            editor.on('action.listOl', function() {\n\n                if (editor.getCursorMode() == 'markdown') {\n\n                    var cm      = editor.editor,\n                        pos     = cm.getDoc().getCursor(true),\n                        posend  = cm.getDoc().getCursor(false),\n                        prefix  = 1;\n\n                    if (pos.line > 0) {\n                        var prevline = cm.getLine(pos.line-1), matches;\n\n                        if(matches = prevline.match(/^(\\d+)\\./)) {\n                            prefix = Number(matches[1])+1;\n                        }\n                    }\n\n                    for (var i=pos.line; i<(posend.line+1);i++) {\n                        cm.replaceRange(prefix+'. '+cm.getLine(i), { line: i, ch: 0 }, { line: i, ch: cm.getLine(i).length });\n                        prefix++;\n                    }\n\n                    cm.setCursor({ line: posend.line, ch: cm.getLine(posend.line).length });\n                    cm.focus();\n                }\n            });\n\n            editor.on('renderLate', function() {\n                if (editor.editor.options.mode == 'gfm') {\n                    editor.currentvalue = parser(editor.currentvalue);\n                }\n            });\n\n            editor.on('cursorMode', function(e, param) {\n                if (editor.editor.options.mode == 'gfm') {\n                    var pos = editor.editor.getDoc().getCursor();\n                    if (!editor.editor.getTokenAt(pos).state.base.htmlState) {\n                        param.mode = 'markdown';\n                    }\n                }\n            });\n\n            UI.$.extend(editor, {\n\n                enableMarkdown: function() {\n                    enableMarkdown()\n                    this.render();\n                },\n                disableMarkdown: function() {\n                    this.editor.setOption('mode', 'htmlmixed');\n                    this.htmleditor.find('.uk-htmleditor-button-code a').html(this.options.lblCodeview);\n                    this.render();\n                }\n\n            });\n\n            // switch markdown mode on event\n            editor.on({\n                enableMarkdown  : function() { editor.enableMarkdown(); },\n                disableMarkdown : function() { editor.disableMarkdown(); }\n            });\n\n            function enableMarkdown() {\n                editor.editor.setOption('mode', 'gfm');\n                editor.htmleditor.find('.uk-htmleditor-button-code a').html(editor.options.lblMarkedview);\n            }\n\n            function addAction(name, replace, mode) {\n                editor.on('action.'+name, function() {\n                    if (editor.getCursorMode() == 'markdown') {\n                        editor[mode == 'replaceLine' ? 'replaceLine' : 'replaceSelection'](replace);\n                    }\n                });\n            }\n        }\n    });\n\n    return UI.htmleditor;\n});\n"],"sourceRoot":"/source/"}