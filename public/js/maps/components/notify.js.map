{"version":3,"sources":["components/notify.js"],"names":["addon","component","window","UIkit","define","amd","UI","containers","messages","notify","options","$","type","message","arguments","extend","status","Message","show","closeAll","group","instantly","id","close","this","defaults","uuid","Utils","uid","element","join","data","content","addClass","currentstatus","pos","appendTo","on","trigger","prototype","timout","is","$this","prepend","marginbottom","parseInt","css","opacity","margin-top","outerHeight","margin-bottom","animate","timeout","closefn","setTimeout","hover","clearTimeout","finalize","remove","children","length","hide","onClose","apply","html","container","find","removeClass"],"mappings":"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","file":"components/notify.js","sourcesContent":["/*! UIkit 2.17.0 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */\n(function(addon) {\n\n    var component;\n\n    if (window.UIkit) {\n        component = addon(UIkit);\n    }\n\n    if (typeof define == \"function\" && define.amd) {\n        define(\"uikit-notify\", [\"uikit\"], function(){\n            return component || addon(UIkit);\n        });\n    }\n\n})(function(UI){\n\n    \"use strict\";\n\n    var containers = {},\n        messages   = {},\n\n        notify     =  function(options){\n\n            if (UI.$.type(options) == 'string') {\n                options = { message: options };\n            }\n\n            if (arguments[1]) {\n                options = UI.$.extend(options, UI.$.type(arguments[1]) == 'string' ? {status:arguments[1]} : arguments[1]);\n            }\n\n            return (new Message(options)).show();\n        },\n        closeAll  = function(group, instantly){\n\n            var id;\n\n            if (group) {\n                for(id in messages) { if(group===messages[id].group) messages[id].close(instantly); }\n            } else {\n                for(id in messages) { messages[id].close(instantly); }\n            }\n        };\n\n    var Message = function(options){\n\n        var $this = this;\n\n        this.options = UI.$.extend({}, Message.defaults, options);\n\n        this.uuid    = UI.Utils.uid(\"notifymsg\");\n        this.element = UI.$([\n\n            '<div class=\"uk-notify-message\">',\n                '<a class=\"uk-close\"></a>',\n                '<div></div>',\n            '</div>'\n\n        ].join('')).data(\"notifyMessage\", this);\n\n        this.content(this.options.message);\n\n        // status\n        if (this.options.status) {\n            this.element.addClass('uk-notify-message-'+this.options.status);\n            this.currentstatus = this.options.status;\n        }\n\n        this.group = this.options.group;\n\n        messages[this.uuid] = this;\n\n        if(!containers[this.options.pos]) {\n            containers[this.options.pos] = UI.$('<div class=\"uk-notify uk-notify-'+this.options.pos+'\"></div>').appendTo('body').on(\"click\", \".uk-notify-message\", function(){\n\n                var message = UI.$(this).data(\"notifyMessage\");\n\n                message.element.trigger('manualclose.uk.notify', [message]);\n                message.close();\n            });\n        }\n    };\n\n\n    UI.$.extend(Message.prototype, {\n\n        uuid: false,\n        element: false,\n        timout: false,\n        currentstatus: \"\",\n        group: false,\n\n        show: function() {\n\n            if (this.element.is(\":visible\")) return;\n\n            var $this = this;\n\n            containers[this.options.pos].show().prepend(this.element);\n\n            var marginbottom = parseInt(this.element.css(\"margin-bottom\"), 10);\n\n            this.element.css({\"opacity\":0, \"margin-top\": -1*this.element.outerHeight(), \"margin-bottom\":0}).animate({\"opacity\":1, \"margin-top\": 0, \"margin-bottom\":marginbottom}, function(){\n\n                if ($this.options.timeout) {\n\n                    var closefn = function(){ $this.close(); };\n\n                    $this.timeout = setTimeout(closefn, $this.options.timeout);\n\n                    $this.element.hover(\n                        function() { clearTimeout($this.timeout); },\n                        function() { $this.timeout = setTimeout(closefn, $this.options.timeout);  }\n                    );\n                }\n\n            });\n\n            return this;\n        },\n\n        close: function(instantly) {\n\n            var $this    = this,\n                finalize = function(){\n                    $this.element.remove();\n\n                    if (!containers[$this.options.pos].children().length) {\n                        containers[$this.options.pos].hide();\n                    }\n\n                    $this.options.onClose.apply($this, []);\n                    $this.element.trigger('close.uk.notify', [$this]);\n\n                    delete messages[$this.uuid];\n                };\n\n            if (this.timeout) clearTimeout(this.timeout);\n\n            if (instantly) {\n                finalize();\n            } else {\n                this.element.animate({\"opacity\":0, \"margin-top\": -1* this.element.outerHeight(), \"margin-bottom\":0}, function(){\n                    finalize();\n                });\n            }\n        },\n\n        content: function(html){\n\n            var container = this.element.find(\">div\");\n\n            if(!html) {\n                return container.html();\n            }\n\n            container.html(html);\n\n            return this;\n        },\n\n        status: function(status) {\n\n            if (!status) {\n                return this.currentstatus;\n            }\n\n            this.element.removeClass('uk-notify-message-'+this.currentstatus).addClass('uk-notify-message-'+status);\n\n            this.currentstatus = status;\n\n            return this;\n        }\n    });\n\n    Message.defaults = {\n        message: \"\",\n        status: \"\",\n        timeout: 5000,\n        group: null,\n        pos: 'top-center',\n        onClose: function() {}\n    };\n\n    UI.notify          = notify;\n    UI.notify.message  = Message;\n    UI.notify.closeAll = closeAll;\n\n    return notify;\n});\n"],"sourceRoot":"/source/"}