{"version":3,"sources":["components/sticky.js"],"names":["addon","component","window","UIkit","define","amd","UI","checkscrollposition","stickies","arguments","length","sticked","$win","scrollTop","newTop","containerBottom","stickyHeight","sticky","documentHeight","$doc","height","windowHeight","dwh","extra","i","element","is","animate","check","options","top","outerHeight","bottom","boundary","bTop","position","boundtoparent","parseInt","css","currentTop","width","getWidthFrom","$","left","wrapper","offset","init","addClass","clsinit","location","hash","target","$target","setTimeout","maxoffset","stickyOffset","stickyMaxOffset","scrollTo","clsactive","animation","reset","defaults","media","disabled","boot","on","Utils","debounce","ready","context","each","$ele","this","data","attr","float","margin","wrap","parent","force","finalize","removeClass","join","bind","support","one","end","innerWidth","matchMedia","matches","innerHeight","elementTop","etse","push","update","enable","disable"],"mappings":"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","file":"components/sticky.js","sourcesContent":["/*! UIkit 2.17.0 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */\n(function(addon) {\n\n    var component;\n\n    if (window.UIkit) {\n        component = addon(UIkit);\n    }\n\n    if (typeof define == \"function\" && define.amd) {\n        define(\"uikit-sticky\", [\"uikit\"], function(){\n            return component || addon(UIkit);\n        });\n    }\n\n})(function(UI){\n\n    \"use strict\";\n\n    var $win         = UI.$win,\n        $doc         = UI.$doc,\n        sticked      = [];\n\n    UI.component('sticky', {\n\n        defaults: {\n            top          : 0,\n            bottom       : 0,\n            animation    : '',\n            clsinit      : 'uk-sticky-init',\n            clsactive    : 'uk-active',\n            getWidthFrom : '',\n            boundary     : false,\n            media        : false,\n            target       : false,\n            disabled     : false\n        },\n\n        boot: function() {\n\n            // should be more efficient than using $win.scroll(checkscrollposition):\n            UI.$doc.on('scrolling.uk.document', function() { checkscrollposition(); });\n            UI.$win.on('resize orientationchange', UI.Utils.debounce(function() {\n\n                if (!sticked.length) return;\n\n                for (var i = 0; i < sticked.length; i++) {\n                    sticked[i].reset(true);\n                }\n\n                checkscrollposition();\n            }, 100));\n\n            // init code\n            UI.ready(function(context) {\n\n                setTimeout(function(){\n\n                    UI.$(\"[data-uk-sticky]\", context).each(function(){\n\n                        var $ele = UI.$(this);\n\n                        if(!$ele.data(\"sticky\")) {\n                            UI.sticky($ele, UI.Utils.options($ele.attr('data-uk-sticky')));\n                        }\n                    });\n\n                    checkscrollposition();\n                }, 0);\n            });\n        },\n\n        init: function() {\n\n            var wrapper  = UI.$('<div class=\"uk-sticky-placeholder\"></div>').css({\n                        'height' : this.element.css('position') != 'absolute' ? this.element.outerHeight() : '',\n                        'float'  : this.element.css(\"float\") != \"none\" ? this.element.css(\"float\") : '',\n                        'margin' : this.element.css(\"margin\")\n                }), boundary = this.options.boundary, boundtoparent;\n\n            wrapper = this.element.css('margin', 0).wrap(wrapper).parent();\n\n            if (boundary) {\n\n                if (boundary === true) {\n\n                    boundary      = wrapper.parent();\n                    boundtoparent = true;\n\n                } else if (typeof boundary === \"string\") {\n                    boundary = UI.$(boundary);\n                }\n            }\n\n            this.sticky = {\n                options       : this.options,\n                element       : this.element,\n                currentTop    : null,\n                wrapper       : wrapper,\n                init          : false,\n                getWidthFrom  : this.options.getWidthFrom || wrapper,\n                boundary      : boundary,\n                boundtoparent : boundtoparent,\n                reset         : function(force) {\n\n                    var finalize = function() {\n                        this.element.css({\"position\":\"\", \"top\":\"\", \"width\":\"\", \"left\":\"\", \"margin\":\"0\"});\n                        this.element.removeClass([this.options.animation, 'uk-animation-reverse', this.options.clsactive].join(' '));\n\n                        this.currentTop = null;\n                        this.animate    = false;\n                    }.bind(this);\n\n\n                    if (!force && this.options.animation && UI.support.animation) {\n\n                        this.animate = true;\n\n                        this.element.removeClass(this.options.animation).one(UI.support.animation.end, function(){\n                            finalize();\n                        }).width(); // force redraw\n\n                        this.element.addClass(this.options.animation+' '+'uk-animation-reverse');\n                    } else {\n                        finalize();\n                    }\n                },\n\n                check: function() {\n\n                    if (this.options.disabled) {\n                        return false;\n                    }\n\n                    if (this.options.media) {\n\n                        switch(typeof(this.options.media)) {\n                            case 'number':\n                                if (window.innerWidth < this.options.media) {\n                                    return false;\n                                }\n                                break;\n                            case 'string':\n                                if (window.matchMedia && !window.matchMedia(this.options.media).matches) {\n                                    return false;\n                                }\n                                break;\n                        }\n                    }\n\n                    var scrollTop      = $win.scrollTop(),\n                        documentHeight = $doc.height(),\n                        dwh            = documentHeight - window.innerHeight,\n                        extra          = (scrollTop > dwh) ? dwh - scrollTop : 0,\n                        elementTop     = this.wrapper.offset().top,\n                        etse           = elementTop - this.options.top - extra;\n\n                    return (scrollTop  >= etse);\n                }\n            };\n\n            sticked.push(this.sticky);\n        },\n\n        update: function() {\n            checkscrollposition(this.sticky);\n        },\n\n        enable: function() {\n            this.options.disabled = false;\n            this.update();\n        },\n\n        disable: function(force) {\n            this.options.disabled = true;\n            this.sticky.reset(force);\n        }\n    });\n\n    function checkscrollposition() {\n\n        var stickies = arguments.length ? arguments : sticked;\n\n        if (!stickies.length || $win.scrollTop() < 0) return;\n\n        var scrollTop       = $win.scrollTop(),\n            documentHeight  = $doc.height(),\n            windowHeight    = $win.height(),\n            dwh             = documentHeight - windowHeight,\n            extra           = (scrollTop > dwh) ? dwh - scrollTop : 0,\n            newTop, containerBottom, stickyHeight, sticky;\n\n        for (var i = 0; i < stickies.length; i++) {\n\n            sticky = stickies[i];\n\n            if (!sticky.element.is(\":visible\") || sticky.animate) {\n                continue;\n            }\n\n            if (!sticky.check()) {\n\n                if (sticky.currentTop !== null) {\n                    sticky.reset();\n                }\n\n            } else {\n\n                if (sticky.options.top < 0) {\n                    newTop = 0;\n                } else {\n                    stickyHeight = sticky.element.outerHeight();\n                    newTop = documentHeight - stickyHeight - sticky.options.top - sticky.options.bottom - scrollTop - extra;\n                    newTop = newTop < 0 ? newTop + sticky.options.top : sticky.options.top;\n                }\n\n                if (sticky.boundary && sticky.boundary.length) {\n\n                    var bTop = sticky.boundary.position().top;\n\n                    if (sticky.boundtoparent) {\n                        containerBottom = documentHeight - (bTop + sticky.boundary.outerHeight()) + parseInt(sticky.boundary.css('padding-bottom'));\n                    } else {\n                        containerBottom = documentHeight - bTop - parseInt(sticky.boundary.css('margin-top'));\n                    }\n\n                    newTop = (scrollTop + stickyHeight) > (documentHeight - containerBottom - (sticky.options.top < 0 ? 0 : sticky.options.top)) ? (documentHeight - containerBottom) - (scrollTop + stickyHeight) : newTop;\n                }\n\n\n                if (sticky.currentTop != newTop) {\n\n                    sticky.element.css({\n                        \"position\" : \"fixed\",\n                        \"top\"      : newTop,\n                        \"width\"    : (typeof sticky.getWidthFrom !== 'undefined') ? UI.$(sticky.getWidthFrom).width() : sticky.element.width(),\n                        \"left\"     : sticky.wrapper.offset().left\n                    });\n\n                    if (!sticky.init) {\n\n                        sticky.element.addClass(sticky.options.clsinit);\n\n                        if (location.hash && scrollTop > 0 && sticky.options.target) {\n\n                            var $target = UI.$(location.hash);\n\n                            if ($target.length) {\n\n                                setTimeout((function($target, sticky){\n\n                                    return function() {\n\n                                        sticky.element.width(); // force redraw\n\n                                        var offset       = $target.offset(),\n                                            maxoffset    = offset.top + $target.outerHeight(),\n                                            stickyOffset = sticky.element.offset(),\n                                            stickyHeight = sticky.element.outerHeight(),\n                                            stickyMaxOffset = stickyOffset.top + stickyHeight;\n\n                                        if (stickyOffset.top < maxoffset && offset.top < stickyMaxOffset) {\n                                            scrollTop = offset.top - stickyHeight - sticky.options.target;\n                                            window.scrollTo(0, scrollTop);\n                                        }\n                                    };\n\n                                })($target, sticky), 0);\n                            }\n                        }\n                    }\n\n                    sticky.element.addClass(sticky.options.clsactive);\n                    sticky.element.css('margin', '');\n\n                    if (sticky.options.animation && sticky.init) {\n                        sticky.element.addClass(sticky.options.animation);\n                    }\n\n                    sticky.currentTop = newTop;\n                }\n            }\n\n            sticky.init = true;\n        }\n    }\n\n    return UI.sticky;\n});\n"],"sourceRoot":"/source/"}