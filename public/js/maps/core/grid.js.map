{"version":3,"sources":["core/grid.js"],"names":["UI","grids","component","defaults","target","row","boot","ready","context","$","each","obj","grid","this","data","gridMatchHeight","Utils","options","attr","init","$this","columns","element","children","elements","find","length","$win","on","fn","match","debounce","$html","is","bind","push","firstvisible","filter","stacked","Math","ceil","parseFloat","css","parent","revert","matchHeights","cls","gridMargin","stackMargin","extend","group","max","outerHeight","height","first","width","setTimeout","lastoffset","ele","offset","top","UIkit"],"mappings":"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","file":"core/grid.js","sourcesContent":["/*! UIkit 2.17.0 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */\n(function(UI) {\n\n    \"use strict\";\n\n    var grids = [];\n\n    UI.component('gridMatchHeight', {\n\n        defaults: {\n            \"target\" : false,\n            \"row\"    : true\n        },\n\n        boot: function() {\n\n            // init code\n            UI.ready(function(context) {\n\n                UI.$(\"[data-uk-grid-match]\", context).each(function() {\n                    var grid = UI.$(this), obj;\n\n                    if (!grid.data(\"gridMatchHeight\")) {\n                        obj = UI.gridMatchHeight(grid, UI.Utils.options(grid.attr(\"data-uk-grid-match\")));\n                    }\n                });\n            });\n        },\n\n        init: function() {\n\n            var $this = this;\n\n            this.columns  = this.element.children();\n            this.elements = this.options.target ? this.find(this.options.target) : this.columns;\n\n            if (!this.columns.length) return;\n\n            UI.$win.on('resize orientationchange', (function() {\n\n                var fn = function() {\n                    $this.match();\n                };\n\n                UI.$(function() {\n                    fn();\n                    UI.$win.on(\"load\", fn);\n                });\n\n                return UI.Utils.debounce(fn, 50);\n            })());\n\n            UI.$html.on(\"changed.uk.dom\", function(e) {\n                $this.columns  = $this.element.children();\n                $this.elements = $this.options.target ? $this.find($this.options.target) : $this.columns;\n                $this.match();\n            });\n\n            this.on(\"display.uk.check\", function(e) {\n                if(this.element.is(\":visible\")) this.match();\n            }.bind(this));\n\n            grids.push(this);\n        },\n\n        match: function() {\n\n            var firstvisible = this.columns.filter(\":visible:first\");\n\n            if (!firstvisible.length) return;\n\n            var stacked = Math.ceil(100 * parseFloat(firstvisible.css('width')) / parseFloat(firstvisible.parent().css('width'))) >= 100;\n\n            if (stacked) {\n                this.revert();\n            } else {\n                UI.Utils.matchHeights(this.elements, this.options);\n            }\n\n            return this;\n        },\n\n        revert: function() {\n            this.elements.css('min-height', '');\n            return this;\n        }\n    });\n\n    UI.component('gridMargin', {\n\n        defaults: {\n            \"cls\": \"uk-grid-margin\"\n        },\n\n        boot: function() {\n\n            // init code\n            UI.ready(function(context) {\n\n                UI.$(\"[data-uk-grid-margin]\", context).each(function() {\n                    var grid = UI.$(this), obj;\n\n                    if (!grid.data(\"gridMargin\")) {\n                        obj = UI.gridMargin(grid, UI.Utils.options(grid.attr(\"data-uk-grid-margin\")));\n                    }\n                });\n            });\n        },\n\n        init: function() {\n\n            var stackMargin = UI.stackMargin(this.element, this.options);\n        }\n    });\n\n    // helper\n\n    UI.Utils.matchHeights = function(elements, options) {\n\n        elements = UI.$(elements).css('min-height', '');\n        options  = UI.$.extend({ row : true }, options);\n\n        var matchHeights = function(group){\n\n            if(group.length < 2) return;\n\n            var max = 0;\n\n            group.each(function() {\n                max = Math.max(max, UI.$(this).outerHeight());\n            }).each(function() {\n\n                var element = UI.$(this),\n                height  = max - (element.outerHeight() - element.height());\n\n                element.css('min-height', height + 'px');\n            });\n        };\n\n        if(options.row) {\n\n            elements.first().width(); // force redraw\n\n            setTimeout(function(){\n\n                var lastoffset = false, group = [];\n\n                elements.each(function() {\n\n                    var ele = UI.$(this), offset = ele.offset().top;\n\n                    if(offset != lastoffset && group.length) {\n\n                        matchHeights(UI.$(group));\n                        group  = [];\n                        offset = ele.offset().top;\n                    }\n\n                    group.push(ele);\n                    lastoffset = offset;\n                });\n\n                if(group.length) {\n                    matchHeights(UI.$(group));\n                }\n\n            }, 0);\n\n        } else {\n            matchHeights(elements);\n        }\n    };\n\n})(UIkit);\n"],"sourceRoot":"/source/"}