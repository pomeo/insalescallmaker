{"version":3,"sources":["core/offcanvas.js"],"names":["UI","scrollpos","x","window","scrollX","y","scrollY","$doc","$win","$html","Offcanvas","show","element","$","length","$body","bar","find","rtl","langdirection","flip","hasClass","dir","pageXOffset","pageYOffset","addClass","css","width","innerWidth","height","innerHeight","outerWidth","this","_initElement","trigger","hide","force","panel","finalize","removeClass","margin-left","margin-right","scrollTo","support","transition","one","end","setTimeout","data","on","e","target","type","match","parents","stopImmediatePropagation","href","attr","replace","Utils","scrollToElement","location","component","boot","preventDefault","ele","offcanvasTrigger","options","keyCode","init","$this","extend","is","offcanvas","UIkit"],"mappings":"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","file":"core/offcanvas.js","sourcesContent":["/*! UIkit 2.17.0 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */\n(function(UI) {\n\n    \"use strict\";\n\n    var scrollpos = {x: window.scrollX, y: window.scrollY},\n        $win      = UI.$win,\n        $doc      = UI.$doc,\n        $html     = UI.$html,\n        Offcanvas = {\n\n        show: function(element) {\n\n            element = UI.$(element);\n\n            if (!element.length) return;\n\n            var $body     = UI.$('body'),\n                bar       = element.find(\".uk-offcanvas-bar:first\"),\n                rtl       = (UI.langdirection == \"right\"),\n                flip      = bar.hasClass(\"uk-offcanvas-bar-flip\") ? -1:1,\n                dir       = flip * (rtl ? -1 : 1);\n\n            scrollpos = {x: window.pageXOffset, y: window.pageYOffset};\n\n            element.addClass(\"uk-active\");\n\n            $body.css({\"width\": window.innerWidth, \"height\": window.innerHeight}).addClass(\"uk-offcanvas-page\");\n            $body.css((rtl ? \"margin-right\" : \"margin-left\"), (rtl ? -1 : 1) * (bar.outerWidth() * dir)).width(); // .width() - force redraw\n\n            $html.css('margin-top', scrollpos.y * -1);\n\n            bar.addClass(\"uk-offcanvas-bar-show\");\n\n            this._initElement(element);\n\n            $doc.trigger('show.uk.offcanvas', [element, bar]);\n        },\n\n        hide: function(force) {\n\n            var $body = UI.$('body'),\n                panel = UI.$(\".uk-offcanvas.uk-active\"),\n                rtl   = (UI.langdirection == \"right\"),\n                bar   = panel.find(\".uk-offcanvas-bar:first\"),\n                finalize = function() {\n                    $body.removeClass(\"uk-offcanvas-page\").css({\"width\": \"\", \"height\": \"\", \"margin-left\": \"\", \"margin-right\": \"\"});\n                    panel.removeClass(\"uk-active\");\n                    bar.removeClass(\"uk-offcanvas-bar-show\");\n                    $html.css('margin-top', '');\n                    window.scrollTo(scrollpos.x, scrollpos.y);\n                    UI.$doc.trigger('hide.uk.offcanvas', [panel, bar]);\n                };\n\n            if (!panel.length) return;\n\n            if (UI.support.transition && !force) {\n\n                $body.one(UI.support.transition.end, function() {\n                    finalize();\n                }).css((rtl ? \"margin-right\" : \"margin-left\"), \"\");\n\n                setTimeout(function(){\n                    bar.removeClass(\"uk-offcanvas-bar-show\");\n                }, 0);\n\n            } else {\n                finalize();\n            }\n        },\n\n        _initElement: function(element) {\n\n            if (element.data(\"OffcanvasInit\")) return;\n\n            element.on(\"click.uk.offcanvas swipeRight.uk.offcanvas swipeLeft.uk.offcanvas\", function(e) {\n\n                var target = UI.$(e.target);\n\n                if (!e.type.match(/swipe/)) {\n\n                    if (!target.hasClass(\"uk-offcanvas-close\")) {\n                        if (target.hasClass(\"uk-offcanvas-bar\")) return;\n                        if (target.parents(\".uk-offcanvas-bar:first\").length) return;\n                    }\n                }\n\n                e.stopImmediatePropagation();\n                Offcanvas.hide();\n            });\n\n            element.on(\"click\", \"a[href^='#']\", function(e){\n\n                var element = UI.$(this),\n                    href = element.attr(\"href\");\n\n                if (href == \"#\") {\n                    return;\n                }\n\n                UI.$doc.one('hide.uk.offcanvas', function() {\n\n                    var target = UI.$(href);\n\n                    if (!target.length) {\n                        target = UI.$('[name=\"'+href.replace('#','')+'\"]');\n                    }\n\n                    if (UI.Utils.scrollToElement && target.length) {\n                        UI.Utils.scrollToElement(target);\n                    } else {\n                        window.location.href = href;\n                    }\n                });\n\n                Offcanvas.hide();\n            });\n\n            element.data(\"OffcanvasInit\", true);\n        }\n    };\n\n    UI.component('offcanvasTrigger', {\n\n        boot: function() {\n\n            // init code\n            $html.on(\"click.offcanvas.uikit\", \"[data-uk-offcanvas]\", function(e) {\n\n                e.preventDefault();\n\n                var ele = UI.$(this);\n\n                if (!ele.data(\"offcanvasTrigger\")) {\n                    var obj = UI.offcanvasTrigger(ele, UI.Utils.options(ele.attr(\"data-uk-offcanvas\")));\n                    ele.trigger(\"click\");\n                }\n            });\n\n            $html.on('keydown.uk.offcanvas', function(e) {\n\n                if (e.keyCode === 27) { // ESC\n                    Offcanvas.hide();\n                }\n            });\n        },\n\n        init: function() {\n\n            var $this = this;\n\n            this.options = UI.$.extend({\n                \"target\": $this.element.is(\"a\") ? $this.element.attr(\"href\") : false\n            }, this.options);\n\n            this.on(\"click\", function(e) {\n                e.preventDefault();\n                Offcanvas.show($this.options.target);\n            });\n        }\n    });\n\n    UI.offcanvas = Offcanvas;\n\n})(UIkit);\n"],"sourceRoot":"/source/"}