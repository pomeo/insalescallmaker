{"version":3,"sources":["core/toggle.js"],"names":["UI","toggles","component","defaults","target","cls","animation","duration","boot","ready","context","$","each","ele","this","data","toggle","Utils","options","attr","setTimeout","forEach","getToggles","init","$this","on","e","element","is","preventDefault","push","totoggle","length","support","animations","split","trim","css","hasClass","toggleClass","animate","then","checkDisplay","bind","UIkit"],"mappings":"CACA,SAAUA,GAEN,YAEA,IAAIC,KAEJD,GAAGE,UAAU,UAETC,UACIC,QAAY,EACZC,IAAY,YACZC,WAAY,EACZC,SAAY,KAGhBC,KAAM,WAGFR,EAAGS,MAAM,SAASC,GAEdV,EAAGW,EAAE,mBAAoBD,GAASE,KAAK,WACnC,GAAIC,GAAMb,EAAGW,EAAEG,KAEf,KAAKD,EAAIE,KAAK,UACV,CAAUf,EAAGgB,OAAOH,EAAKb,EAAGiB,MAAMC,QAAQL,EAAIM,KAAK,uBAI3DC,WAAW,WAEPnB,EAAQoB,QAAQ,SAASL,GACrBA,EAAOM,gBAGZ,MAIXC,KAAM,WAEF,GAAIC,GAAQV,IAEZA,MAAKQ,aAELR,KAAKW,GAAG,QAAS,SAASC,GAClBF,EAAMG,QAAQC,GAAG,gBAAgBF,EAAEG,iBACvCL,EAAMR,WAGVf,EAAQ6B,KAAKhB,OAGjBE,OAAQ,WAEJ,GAAIF,KAAKiB,SAASC,OAElB,GAAIlB,KAAKI,QAAQZ,WAAaN,EAAGiC,QAAQ3B,UAAW,CAEhD,GAAIkB,GAAQV,KAAMoB,EAAapB,KAAKI,QAAQZ,UAAU6B,MAAM,IAEnC,IAArBD,EAAWF,SACXE,EAAW,GAAKA,EAAW,IAG/BA,EAAW,GAAKA,EAAW,GAAGE,OAC9BF,EAAW,GAAKA,EAAW,GAAGE,OAE9BtB,KAAKiB,SAASM,IAAI,qBAAsBvB,KAAKI,QAAQX,SAAS,MAE1DO,KAAKiB,SAASO,SAASxB,KAAKI,QAAQb,MAEpCS,KAAKiB,SAASQ,YAAYzB,KAAKI,QAAQb,KAEvCS,KAAKiB,SAASnB,KAAK,WACfZ,EAAGiB,MAAMuB,QAAQ1B,KAAMoB,EAAW,IAAIO,KAAK,WACvCzC,EAAGW,EAAEG,MAAMuB,IAAI,qBAAsB,IACrCrC,EAAGiB,MAAMyB,aAAa5B,WAM9BA,KAAKiB,SAASnB,KAAK,WACfZ,EAAGiB,MAAMuB,QAAQ1B,KAAMoB,EAAW,GAAG,yBAAyBO,KAAK,WAC/DzC,EAAGW,EAAEG,MAAMyB,YAAYf,EAAMN,QAAQb,KAAKgC,IAAI,qBAAsB,IACpErC,EAAGiB,MAAMyB,aAAa5B,OACxB6B,KAAK7B,aAKfA,MAAKiB,SAASQ,YAAYzB,KAAKI,QAAQb,KACvCL,EAAGiB,MAAMyB,aAAa5B,KAAKiB,WAInCT,WAAY,WACRR,KAAKiB,SAAWjB,KAAKI,QAAQd,OAASJ,EAAGW,EAAEG,KAAKI,QAAQd,eAIjEwC","file":"core/toggle.js","sourcesContent":["/*! UIkit 2.17.0 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */\n(function(UI){\n\n    \"use strict\";\n\n    var toggles = [];\n\n    UI.component('toggle', {\n\n        defaults: {\n            target    : false,\n            cls       : 'uk-hidden',\n            animation : false,\n            duration  : 200\n        },\n\n        boot: function(){\n\n            // init code\n            UI.ready(function(context) {\n\n                UI.$(\"[data-uk-toggle]\", context).each(function() {\n                    var ele = UI.$(this);\n\n                    if (!ele.data(\"toggle\")) {\n                        var obj = UI.toggle(ele, UI.Utils.options(ele.attr(\"data-uk-toggle\")));\n                    }\n                });\n\n                setTimeout(function(){\n\n                    toggles.forEach(function(toggle){\n                        toggle.getToggles();\n                    });\n\n                }, 0);\n            });\n        },\n\n        init: function() {\n\n            var $this = this;\n\n            this.getToggles();\n\n            this.on(\"click\", function(e) {\n                if ($this.element.is('a[href=\"#\"]')) e.preventDefault();\n                $this.toggle();\n            });\n\n            toggles.push(this);\n        },\n\n        toggle: function() {\n\n            if(!this.totoggle.length) return;\n\n            if (this.options.animation && UI.support.animation) {\n\n                var $this = this, animations = this.options.animation.split(',');\n\n                if (animations.length == 1) {\n                    animations[1] = animations[0];\n                }\n\n                animations[0] = animations[0].trim();\n                animations[1] = animations[1].trim();\n\n                this.totoggle.css('animation-duration', this.options.duration+'ms');\n\n                if (this.totoggle.hasClass(this.options.cls)) {\n\n                    this.totoggle.toggleClass(this.options.cls);\n\n                    this.totoggle.each(function(){\n                        UI.Utils.animate(this, animations[0]).then(function(){\n                            UI.$(this).css('animation-duration', '');\n                            UI.Utils.checkDisplay(this);\n                        });\n                    });\n\n                } else {\n\n                    this.totoggle.each(function(){\n                        UI.Utils.animate(this, animations[1]+' uk-animation-reverse').then(function(){\n                            UI.$(this).toggleClass($this.options.cls).css('animation-duration', '');\n                            UI.Utils.checkDisplay(this);\n                        }.bind(this));\n                    });\n                }\n\n            } else {\n                this.totoggle.toggleClass(this.options.cls);\n                UI.Utils.checkDisplay(this.totoggle);\n            }\n        },\n\n        getToggles: function() {\n            this.totoggle = this.options.target ? UI.$(this.options.target):[];\n        }\n    });\n\n})(UIkit);\n"],"sourceRoot":"/source/"}